{"version":3,"sources":["webpack://Chorda/webpack/universalModuleDefinition","webpack://Chorda/./src/Blueprint.ts","webpack://Chorda/./src/Gear.ts","webpack://Chorda/./src/Html.ts","webpack://Chorda/./src/Hub.ts","webpack://Chorda/./src/index.ts","webpack://Chorda/./src/mix/Mixin.ts","webpack://Chorda/./src/mix/index.ts","webpack://Chorda/./src/mix/utils.ts","webpack://Chorda/./src/pipe/async.ts","webpack://Chorda/./src/pipe/buffered.ts","webpack://Chorda/./src/pipe/index.ts","webpack://Chorda/./src/pipe/pipe.ts","webpack://Chorda/./src/pipe/utils.ts","webpack://Chorda/./src/reconcile.ts","webpack://Chorda/./src/render/index.ts","webpack://Chorda/./src/render/node.ts","webpack://Chorda/./src/render/utils.ts","webpack://Chorda/./src/rules.ts","webpack://Chorda/./src/value/bus.ts","webpack://Chorda/./src/value/callable.ts","webpack://Chorda/./src/value/computable.ts","webpack://Chorda/./src/value/engine.ts","webpack://Chorda/./src/value/index.ts","webpack://Chorda/./src/value/iterable.ts","webpack://Chorda/./src/value/iterator.ts","webpack://Chorda/./src/value/node.ts","webpack://Chorda/./src/value/observable.ts","webpack://Chorda/./src/value/pubsub.ts","webpack://Chorda/./src/value/utils.ts","webpack://Chorda/webpack/bootstrap","webpack://Chorda/webpack/startup"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Chorda\"] = factory();\n\telse\n\t\troot[\"Chorda\"] = factory();\n})(self, function() {\nreturn ","import { Html } from \".\";\nimport { defaultHtmlFactory, defaultHtmlInitRules, defaultLayout, HtmlBlueprint, HtmlOptions, HtmlScope } from \"./Html\";\nimport { NoInfer } from \"./Hub\";\nimport { Mixed, mixin } from \"./mix\";\nimport { pipe, Scheduler } from \"./pipe\";\nimport { Renderer, VNodeFactory } from \"./render\";\n\nexport type InferBlueprint<T, E=unknown, H=any> = HtmlBlueprint<T, E, H>\n\nexport type Blueprint<T, E=unknown, H=any> = InferBlueprint<NoInfer<T>, NoInfer<E>, H>\n\nexport const mix = <T, E=unknown>(...args: Blueprint<T, E>[]) : InferBlueprint<unknown> => {\n    return mixin.apply(this, args)\n}\n\n// export const mix2 = <T, X>(a: HtmlBlueprint<T>, b?: HtmlBlueprint<X>) : Mixed<HtmlBlueprint<T&X>> => {\n//     return mixin(b as any, a as any) as Mixed<HtmlBlueprint<T&X>>\n// }\n\nexport const createHtmlOptions = <T>(blueprint: InferBlueprint<T>) : HtmlOptions<any, any, any> => {\n    const b = mixin(blueprint as T).build(defaultHtmlInitRules)\n    if (typeof b === 'boolean') {\n        return null\n    }\n    return b\n}\n\nexport const createHtmlContext = (patcher: Scheduler, renderer: Scheduler&Renderer&VNodeFactory) : HtmlScope => {\n    return {\n        $defaultFactory: defaultHtmlFactory,\n        $defaultLayout: defaultLayout,\n        $engine: patcher,\n        $renderer: renderer,\n        $pipe: pipe(patcher, renderer)\n    }\n}\n\nexport const attach = (html: Html, el: () => Element) => {\n    document.addEventListener('DOMContentLoaded', () => {\n        html.attach(el())\n    })    \n}\n","import { isMixed, lastEffectiveValue, mixin, Mixed, MixRules } from './mix'\nimport { Hub, HubEvents, HubOptions, HubScope, Indexed, Keyed, NoInfer, State } from './Hub'\nimport { DefaultRules } from './rules'\nimport { isIterable, isValueIterator, IterableValue, Value, ValueIterator } from './value'\nimport { ItemOp, KVItem, reconcile } from './reconcile'\n\n\nexport const defaultGearFactory = <D, E>(opts: GearOptions<D, E>, context: GearScope&D, scope?: any, rules? : MixRules) : Gear<D> => {\n    return new Gear(opts, context, scope)\n}\n\n\n//------------------------------------\n// GEAR\n//------------------------------------\n\nexport type GearBlueprint<D=unknown, E=unknown> = GearOptions<D, E>|string|boolean|Function|Mixed<any>//<Blueprint<D, E>>\n\n\nexport const defaultInitRules = {\n    defaultItem: DefaultRules.Option,\n    defaultComponent: DefaultRules.Option,\n    components: DefaultRules.OptionCollection,\n    templates: DefaultRules.OptionCollection,\n}\n\nexport const defaultPatchRules = {\n    defaultItem: DefaultRules.OptionCollectionOverlap,\n    defaultComponent: DefaultRules.OptionCollectionOverlap,\n    components: DefaultRules.OptionCollectionOverlap,\n    templates: DefaultRules.OptionCollectionOverlap,\n    items: DefaultRules.Overlap,\n}\n\nexport function defaultGearSort (a: Gear, b: Gear) {\n    const w1 = (a.options && a.options.weight) || 0\n    const w2 = (b.options && b.options.weight) || 0\n    if (w1 == w2) {\n      const i1 = a.index || 0\n      const i2 = b.index || 0\n      return i1 - i2\n    }\n    return w1 - w2\n}\n\n\ntype KeyedAndIndexed = {\n    index: number\n    key: string\n}\n\n\n\nexport interface GearOptions<D, E, B extends GearBlueprint<D, E>=GearBlueprint<D, E>> extends HubOptions<D, E> {\n    \n    weight?: number\n    name?: string\n\n    // контейнер items\n    items?: B[] | boolean\n    itemFactory?: Function\n    defaultItem?: B\n\n    // контейнер components\n    components?: {[key: string]: B} | boolean\n    componentFactory?: Function\n    defaultComponent?: B\n\n    templates?: {[key: string]: B}\n\n    childFilter?: (value?: KeyedAndIndexed, index?: number, array?: this[]) => boolean\n    childSorter?: (a: this, b: this) => number\n}\n\nexport type GearScope = HubScope & {\n    $defaultFactory: Function\n    // afterSyncIndexed?: () => Indexed<Gear>\n    // afterSyncKeyed?: () => Keyed<Gear>\n    // afterAddKeyed?: () => Gear\n    // beforeRemoveKeyed?: () => string\n}\n\nexport type GearEvents = HubEvents & {\n    afterSyncIndexed?: () => Indexed<Gear>\n    afterSyncKeyed?: () => Keyed<Gear>\n    afterAddKeyed?: () => Gear\n    beforeRemoveKeyed?: () => string\n}\n\n\nexport const isGear = (obj: any) : obj is Gear => {\n    return obj != null && (obj as Gear).addIndexed != null\n}\n\n\n\nexport class Gear<D=unknown, E=unknown, S extends GearScope=GearScope, O extends GearOptions<D, E>=GearOptions<D, E>, B extends GearBlueprint<D, E>=GearBlueprint<D, E>> extends Hub<D, E, S, O> {\n\n//    containers: {[k: string]: ComponentCollection<B>|ItemCollection<B>}\n    index?: number\n    key?: string\n    parent?: this\n    components: {[k: string]: Gear<D>}\n    items: Gear<D>[]\n    uid?: string | number | symbol\n\n    constructor (options: O, context?: S, scope?: any) {\n        super(options, context, scope)\n\n        this.components = {}\n        this.items = []\n        \n    }\n\n    patch (optPatch: O) {\n        super.patch(optPatch)\n\n        const o = this.options\n\n        // console.log(optPatch)\n        // console.log(o)\n\n\n        if (optPatch.templates != null) {\n            if (o.components && o.components !== true) {\n                // пересоздаем компоненты\n                for (let k in optPatch.templates) {\n                    // if (this.components[k]) {\n                    //     this.updateComponent(k, o.components[k] as B)\n                    // }\n//                    console.log('template component', k, o.components[k])\n                    if (o.components[k] === undefined) {\n                        this.addKeyed(k, null)\n                    }\n                }\n            }\n            else if (o.components == null) {\n                // создаем компоненты по умолчанию\n                for (let k in optPatch.templates) {\n                    this.addKeyed(k, null)\n                }\n            }\n        }\n\n        if (optPatch.components != null) {\n            if (o.components === true) {\n                for (let k in o.templates) {\n                    this.addKeyed(k, null)\n                }\n            }\n            else if (o.components === false) {\n                // TODO здесь мы должны выключать все компоненты\n            }\n            else {\n                this.syncKeyed(o.components as Keyed<Mixed<B>>)\n            }\n        }\n\n        if (optPatch.items) {\n            if (o.items === true) {\n\n            }\n            else if (o.items === false) {\n\n            }\n            else {\n                this.syncIndexed(o.items as Mixed<B>[])\n            }\n        }\n\n\n    }\n\n    initRules () : MixRules {\n        return defaultInitRules\n    }\n\n    patchRules () : MixRules {\n        return defaultPatchRules\n    }\n\n\n    //-----------------------\n    // Keyed\n    //-----------------------\n\n    addKeyed (key: string, blueprint: B|Mixed<B>|Gear<D>, scope?: D&GearScope) : Gear<D> {\n\n        if (this.components[key]) {\n            console.error('Component already exists', key)\n        }\n\n        // if (blueprint == null) {\n        //     return\n        // }\n        if (isMixed(blueprint)) {\n            console.error('Component should not be of mixed type')\n            const last  = lastEffectiveValue(blueprint)\n            if (last === false || last == null) {\n                return\n            }\n        }\n        else if (isGear(blueprint)) {\n            // FIXME\n            // if (blueprint.parent) {\n            //     // FIXME это надо заменить на removeChild\n            //     blueprint.key ? blueprint.parent.removeKeyed(blueprint.key) : blueprint.parent.removeIndexed(blueprint.index)\n            // }\n            blueprint.parent = this\n            blueprint.key = key\n            this.components[key] = blueprint\n            return blueprint\n        }    \n\n        const {defaultComponent, templates, componentFactory} = this.options\n\n        const template = templates ? templates[key] : undefined\n//        const templates = this.parent.options.templates\n\n        const compOpts = mixin(defaultComponent, template, blueprint).build(this.initRules())\n\n        if (compOpts) {\n//            console.log('addKeyed', key, compOpts)\n//            console.log(scope)\n            const comp = (componentFactory || this.scope.$defaultFactory)(compOpts, this.scope, scope)\n            comp.key = key\n            comp.parent = this\n\n            this.components[key] = comp\n\n            this.events.afterAddKeyed?.(comp, this.scope)\n\n            return comp\n        }\n    }\n\n    removeKeyed (key: string) {\n        this.events.beforeRemoveKeyed?.(key, this.scope)\n        delete this.components[key]\n    }\n\n    updateKeyed (key: string, blueprint: B) {\n        this.components[key].destroy()\n        this.addKeyed(key, blueprint)\n    }\n\n    syncKeyed (next: {[k: string]: Mixed<B>} | IterableValue<any>) {\n\n//        console.log('sync-keyed', this.key, next)\n\n        if (isIterable(next)) {\n\n            const it = next\n            const key = it.$name\n\n            const components = {...this.components}\n            const componentsToUpdate: Keyed<Gear> = {}\n            const componentsToAdd: Keyed<any> = {}\n\n            next.$each(result => {\n\n                const k = result.$uid\n\n                if (k in components) {\n                    componentsToUpdate[k] = components[k]\n                }\n                else {\n                    componentsToAdd[k] = result\n                }\n\n                delete components[k]\n\n            })\n\n            // let result = it.next()\n            // while (!result.done) {\n\n            //     const k = result.value.$uid\n\n            //     if (k in components) {\n            //         componentsToUpdate[k] = components[k]\n            //     }\n            //     else {\n            //         componentsToAdd[k] = result.value\n            //     }\n\n            //     delete components[k]\n\n            //     result = it.next()\n            // }\n\n            for (let k in componentsToAdd) {\n                // FIXME не бьются типы скоупа и нового элемента\n                this.addKeyed(k, {} as B, {[key]: componentsToAdd[k]} as any)\n            }\n            for (let k in components) {\n                this.removeKeyed(k)\n            }\n            for (let k in componentsToUpdate) {\n                console.warn('Component update not yet ready')\n                // TODO\n            }\n\n        }\n        else {\n\n            // свойство аддитивности позволяет обновлять элементы поотдельности\n\n            for (let k in next) {\n                const nextComp = next[k].build(this.initRules())\n\n//                console.log('Next comp', k, nextComp, next[k])\n\n                const comp = this.components[k]\n\n                if (nextComp === false) {\n                    if (comp) {\n                       if (comp.parent == this) {\n                            // для собственных компонентов начинаем процедуру удаления\n                            comp.destroy()\n                        }\n                        else {\n                            // компонент-кукушку просто убираем из списка\n                            this.removeKeyed(k)\n                        }\n                    }\n                }\n                else if (nextComp === true) {\n                    if (!comp) {\n                        this.addKeyed(k, {} as B)\n                    }\n                    else if (comp.state == State.Destroying) {\n                        console.log('stop destroying', k)\n                        comp.reset()\n                    }\n                    else {\n                        if (comp.state == State.Destroyed) {\n                            console.warn('component already destroyed', k)\n                        }\n                    }\n                }\n                else if (nextComp != null) {\n                    if (!comp) {\n                        this.addKeyed(k, nextComp)\n                    }\n                    else {\n                        // FIXME здесь мы предполагаем, что в next именно options\n                        comp.reset(nextComp as GearOptions<any, any>)\n                    }\n                }\n                else {\n                    // игнорируем пустые компоненты\n                }\n            }\n        }\n\n        this.events.afterSyncKeyed?.(this.components, this.scope)\n    }\n\n    //-----------------------\n    // Indexed\n    //-----------------------\n\n\n    addIndexed (blueprint: B|Mixed<B>|Gear<D>, idx?: number, scope?: unknown) : Gear<D> {\n        \n        if (blueprint == null) {\n            return\n        }\n        if (isMixed(blueprint)) {\n//            console.error('Item should not be of mixed type')\n            const last  = lastEffectiveValue(blueprint)\n            if (last === false || last == null) {\n                return\n            }\n        }\n        else if (isGear(blueprint)) {\n            // FIXME\n            this.items.push(blueprint)\n            return blueprint\n        }\n\n        const {defaultItem, itemFactory} = this.options\n\n        //const template = templates ? templates[templateKey] : undefined\n\n        const itemOpts = mixin(defaultItem/*, template*/, blueprint as any).build(this.initRules())\n\n//        console.log(itemOpts)\n        \n        if (itemOpts) {\n            let index = idx\n            if (index == null) {\n                index = this.items.length\n            }\n            else {\n                for (let i = index; i < this.items.length; i++) {\n                    this.items[i].index++\n                }\n            }\n\n            const item: this = (itemFactory || this.scope.$defaultFactory)(itemOpts, this.scope, scope)\n            item.index = index\n            item.parent = this\n\n            this.items.splice(index, 0, item)\n\n            return item\n        }\n    }\n\n    updateIndexed (idx: number, blueprint: B) {\n        // TODO\n    }\n\n    removeIndexed (idx: number) {\n        this.items.splice(idx, 1)\n        this.items.forEach(itm => {\n            if (itm.index > idx) {\n                itm.index--\n            }\n        })\n    }\n\n    syncIndexed (next: Mixed<B>[] | IterableValue<any>) {\n\n//        console.log('sync indexed', this.key, next)\n\n        if (isIterable(next)) {\n\n            const it = next\n            const key = it.$name\n\n//            console.log('iterable', key, it)\n\n            const prevItems: KVItem[] = []\n            this.items.forEach(item => {\n                prevItems.push({\n                    key: String(item.uid),\n                    value: item\n                })\n            })\n            const nextItems: KVItem[] = []\n\n            next.$each((result, key) => {\n                nextItems.push({\n                    key: result.$uid === undefined ? key : result.$uid,\n                    value: result\n                })\n            })\n            \n            // let result = it.next()\n            // while (!result.done) {\n            //     nextItems.push({\n            //         key: result.value.$uid,\n            //         value: result.value\n            //     })\n            //     result = it.next()\n            // }\n\n//            console.log('next items', nextItems, prevItems)\n//            console.log('reconcile')\n\n            const mergedItems: KVItem[] = reconcile(prevItems, nextItems)\n\n//            console.log('reconcile end')\n\n//            console.log('merged items', this.key, mergedItems)\n\n            const children: Gear<D>[] = []\n\n            let i = 0\n            mergedItems.forEach((itm) => {\n                let item: Gear<D> = null\n                if (itm.op == ItemOp.ADD) {\n                    const v = itm.value\n                    item = this.addIndexed({} as B, i, key ? {[key]: v} : v)\n                    item.uid = itm.key// v.$uid\n//                        console.log('add', i, itm.key)//v.$uid)\n                }\n                else if (itm.op == ItemOp.DELETE) {\n                    item = itm.value as Gear<D>\n                    item.parent = null\n                    item.destroy()\n                    item.parent = this\n                    if (item.state == State.Destroyed) {\n                        i--\n                        item = null\n                    }\n                    // else {\n                    //     debugger\n                    // }\n//                        console.log('del', i, itm.key)\n                }\n                else {\n                    item = itm.value as Gear<D>\n                    item.index = i\n//                        console.log('upd', i, itm.key, itm.value)\n                }\n                item && children.push(item)\n                i++\n            })\n\n            this.items = children\n\n//            console.log(this.items)\n\n        }\n        else {\n\n//            console.log(next)\n\n            if (!Array.isArray(next)) {\n                console.error('Items must be array like value', next)\n            }\n\n            // у индексированных элементов нет свойства аддитивности, поэтому пересоздаем все элементы\n\n            this.items.forEach(item => {\n                delete item.parent\n                item.destroy()\n            })\n\n            this.items = []\n\n            for (let o of next) {\n                this.addIndexed(o)\n            }\n        }\n\n        this.events.afterSyncIndexed?.(this.items, this.scope)\n    }\n\n\n\n    destroy (deferred?: Function) {\n\n        super.destroy(() => {\n\n            deferred && deferred()\n\n            if (this.parent) {\n                if (this.key) {\n                    this.parent.removeKeyed(this.key)\n                }\n                else {\n                    this.parent.removeIndexed(this.index)\n                }\n            }\n            for (let child of this.items) {\n                delete child.parent\n                child.destroy()\n            }\n            for (let k in this.components) {\n                const child = this.components[k]\n                delete child.parent\n                child.destroy()\n            }\n            delete this.parent\n            delete this.key\n            delete this.index\n            this.items = []\n            this.components = {}\n        })\n\n    }\n\n\n\n    get children () : this[] {\n        let children = [].concat(this.items).concat(Object.values(this.components)).filter(c => c.parent == this)\n        if (this.options.childFilter) {\n            children = children.filter(this.options.childFilter)\n        }\n        return children.sort(this.options.childSorter || defaultGearSort)\n    }\n\n    visit (visitor: (node: this) => boolean|void) {\n        if (visitor(this) !== false) {\n            this.children.forEach(visitor)\n        }\n    }\n}\n\n\n\n\n","import { Scheduler, State } from '.'\nimport { defaultInitRules, defaultPatchRules, Gear, GearEvents, GearOptions, GearScope } from './Gear'\nimport { Keyed, NoInfer, Stateable } from './Hub'\nimport { Mixed, mixin, MixRules } from './mix'\nimport { buildClassName, Dom, DomNode, Renderable, Renderer, VNodeFactory } from './render'\nimport { DefaultRules } from './rules'\nimport { Observable } from './value'\n\n//------------------------------------\n// HTML\n//------------------------------------\n\nexport type HtmlScope = {\n    $renderer: Renderer&Scheduler&VNodeFactory\n    $defaultLayout: Function\n    $dom?: HTMLElement\n    //$vnodeFactory: VNodeFactory\n//    afterRender?: any\n} & GearScope\n\nexport type HtmlBlueprint<D=unknown, E=unknown, H=any> = HtmlOptions<D, E, H>|string|boolean|Function|Mixed<any>//<HtmlBlueprint>\n\nexport interface HtmlOptions<D, E, H, B=HtmlBlueprint<NoInfer<D>, NoInfer<E>, H>> extends GearOptions<D, E, B> {\n    layout?: Function\n    render?: boolean\n    dom?: H\n//    domEvents?: {[key: string]: (e: any, s: {[key: string]: Observable}) => void|boolean}\n    tag?: string|boolean\n    text?: string\n\n    classes?: {[key: string]: boolean}\n    css?: string|string[]\n    styles?: {[key: string]: string|number}\n    html?: string\n\n}\n\n//const o: HtmlOptions<any, any, any> = {}\n\n\n\n\nexport type HtmlEvents = GearEvents & {\n    afterRender?: () => any\n    afterInit?: () => Stateable&Renderable\n}\n\nexport type HtmlProps = {\n    className?: string\n    styles?: {[k: string]: string|number}\n    html?: string\n    tag?: string|boolean\n    key?: string|number|symbol\n    elRef?: Function\n}\n\n\nexport const defaultHtmlInitRules = {\n    css: DefaultRules.StringArray,\n    ...defaultInitRules\n}\n  \nexport const defaultHtmlPatchRules = {\n    css: DefaultRules.StringArray,\n    ...defaultPatchRules\n}\n\n\nexport const defaultHtmlFactory = <D extends Keyed, E=unknown, H=unknown>(opts: HtmlOptions<D, E, H>, context: HtmlScope&D, scope: any, rules? : MixRules) : Html<D> => {\n    return new Html(opts, context, scope)\n}\n\nexport const defaultRender = (html: Renderable|any) => (html.render) ? html.render() : html\n\n\nexport const passthruLayout = (factory: VNodeFactory, key: string, props: any, dom: Dom, children?: Renderable[]) : any[] => {\n    return children && children.map(defaultRender)\n}\n\nexport const defaultLayout = (factory: VNodeFactory, key: string, props: any, dom: Dom, children?: Renderable[]) : any => {\n    return factory.createVNode(key, props, dom, children && children.map(defaultRender))\n}\n\n\n\nexport class Html<D=unknown, E=unknown, H=any, S extends HtmlScope=HtmlScope, O extends HtmlOptions<D, E, H>=HtmlOptions<D, E, H>, B extends HtmlBlueprint<D, E, H>=HtmlBlueprint<D, E, H>> extends Gear<D, E, S, O, B> implements Renderable {\n\n    vnode: any\n    attached: boolean\n    dirty: boolean\n\n\n//    ext: HtmlProps\n\n    constructor (options: O, context?: S, scope?: any) {\n        super(options, context, scope)\n\n        this.scope.$dom = new DomNode(this.scope.$renderer) as any\n\n    //        this.ext = {}\n\n//        this.dirty = true\n    }\n\n\n    patch (optPatch: O) {\n        super.patch(optPatch)\n\n        const o = this.options\n\n        // TODO\n\n        const dom = this.scope.$dom as HtmlProps\n\n        if (optPatch.classes) {\n            dom.className = buildClassName(dom.className, o.classes)\n        }\n        if (optPatch.css) {\n            dom.className = buildClassName(dom.className, o.css)\n        }\n        if (optPatch.styles) {\n            dom.styles = {...dom.styles, ...o.styles}\n        }\n        if (optPatch.html) {\n            dom.html = o.html\n        }\n        if (optPatch.tag != null) {\n            dom.tag = o.tag\n        }\n\n        // помечаем путь до корня \"грязным\"\n        let html = this\n        while (html && !html.dirty) {\n            html.dirty = true\n//            if (!html.parent) {\n            if (html.isRoot) {\n//                debugger\n                    // планируем перерисовку в свой такт (после всех патчей)\n                html.scope.$pipe.push(html.scope.$renderer.task(null))\n//                break\n            }\n            html = html.parent\n        }\n        // this.visit((h) => {\n        //     if (h.dirty) return false\n        //     h.dirty = true\n        // })\n    }\n\n    initRules () : MixRules {\n        return defaultHtmlInitRules\n    }\n\n    patchRules () : MixRules {\n        return defaultHtmlPatchRules\n    }\n\n    attach (root: Element) {\n        this.scope.$renderer.attach(root, this)\n        this.attached = true\n    }\n\n    detach () {\n        this.scope.$renderer.detach(this)\n        this.attached = false\n    }\n\n    get isRoot () : boolean {\n        return this.parent ? (this.parent.scope.$renderer != this.scope.$renderer) : true\n    }\n\n\n\n    render (asRoot?: boolean) : any {\n\n        if (this.state == State.Destroyed) {\n            return null\n        }\n\n        if (!asRoot && this.isRoot) {\n            return null\n        }\n\n        if (this.options.render === false) {\n            return null\n        }\n\n        if (!this.dirty) {\n            return this.vnode\n        }\n\n        const o = this.options\n\n        const layout = o.layout || this.scope.$defaultLayout\n//        const renderer: Renderer = this.scope.$renderer\n        const factory = this.scope.$renderer//.$vnodeFactory\n        const dom = this.scope.$dom\n        const text = o.text\n        const children = this.children\n        const key = this.uid || this.key || this.index\n\n        // if (key != null) {\n        //     ext.key = key\n        // }\n\n        if (text || children.length > 0) {\n            let childrenAndText = children\n            if (text) {\n                childrenAndText = [...children]\n                const i = children.findIndex(c => c.options.weight && c.options.weight > 0)\n                if (i == -1) {\n                    childrenAndText.push(text as any)\n                }\n                else {\n                    childrenAndText.splice(i, 0, text as any)\n                }\n            }\n            this.vnode = layout(factory, key, this.options.dom, dom, childrenAndText)\n        }\n        else {\n            this.vnode = layout(factory, key, this.options.dom, dom)\n        }\n\n//        (dom as any).$applyEffects(this.scope.$renderer)\n\n        this.dirty = false\n\n        return this.vnode \n    }\n\n    destroy (defer?: Function) {\n        super.destroy(() => {\n\n            if (this.attached) {\n                this.detach()\n            }\n            else {\n\n                // помечаем путь до корня \"грязным\"\n                let html = this\n                while (html && !html.dirty) {\n                    html.dirty = true\n        //            if (!html.parent) {\n                    if (html.isRoot) {\n                        if (this.state == State.Destroying) {\n                            // отложенное удаление планируем в ближайший кадр, чтобы удаленный элемент как можно скорее пропал из VDOM\n                            html.scope.$renderer.publish(html.scope.$renderer.task(null))\n                        }\n                        else {\n                            // немедленное удаление синхронизируем с патчами, чтобы избежать \"моргания\"\n                            html.scope.$engine.publish(html.scope.$renderer.task(null))\n                        }\n        //                debugger\n        //                break\n                    }\n                    html = html.parent\n                }\n            }\n\n            defer && defer()\n        })\n    }\n\n\n}\n\n\n\n\n","import { Value, EventBus, Subscription, ObservableValue, Handler, isEventBus, isObservable, noAutoTerminal, ValueIterator, ValueSet, autoTerminalAware, isAutoTerminal, Observable, Thenable, isCallable, spySubscriptions, isValueSet } from './value'\nimport { MixRules, mixin } from './mix'\nimport { ownTask, Pipe, Scheduler } from './pipe'\n\n\nexport type Scope = {\n    [k: string]: any\n}\n\n// https://stackoverflow.com/a/56688073\nexport type NoInfer<T> = [T][T extends any ? 0 : never]\n\n// Scope\n\nexport type Scoped<D> = {\n    [P in keyof D]?: D[P]&Value<D[P]>\n}\n\ntype EventScoped<D> = {\n    [P in keyof D]?: D[P]&Value<D[P]>&EventBus<any>\n}\n\ntype ObservableScoped<D> = {\n    [P in keyof D]?: D[P]&ObservableValue<D[P]>&EventBus<any>&ObservableScoped<D[P]>\n}\n\n// Scope injections\n\ntype Injectors<D> = {\n    [P in keyof NoInfer<D>]?: Injector<D, D[P]>\n}\n\nexport type Injector<D, R=any> = (scope: Scoped<D>&{$context?: Scoped<D>}) => R\n\n\n// Scope listeners\n\ntype L<T, S> = T extends (...args: any[]) => infer R ? Listener<S, R> : Listeners<T, S>// (T extends number|string|any[] ? any : Listeners<T, S>)// NestedListeners<T, D>// Listeners<T>\n\n// type L2<T, D> = T extends (...args: any[]) => infer R ? Listener<D, R> : any\n\n// type NestedListeners<T, S=T> = {\n//     [P in keyof T]?: L2<T[P], S>\n// }\n\n//type X = ((...args: any[]) => any) | {[k: string]: Function}\n\ntype Listeners<E, S> = {\n//    [P in keyof D]?: Listener<D, D[P]>\n    [P in keyof E]?: L<E[P], S>// D[P] extends (...args: any[]) => infer R ? Listener<D, R> : Listeners<D[P]> //(D[P] extends object ? Listeners<D[P]> : never)//Listeners<D[P]>\n} //& Keyed<any>\n\ntype MethodsAndObjectsOf<D> = {\n    [P in keyof D as D[P] extends ((...args: any[]) => any) | {[k: string]: any} ? P : never]?: D[P]// extends (...args: any[]) => any ? D[P] : never\n}\n\nexport type MethodsOf<D> = {\n    [P in keyof D as D[P] extends ((...args: any) => any) ? P : never]?: D[P]// extends (...args: any[]) => any ? D[P] : never\n}\n\n\ntype ObjectsOf<D> = {\n    [P in keyof D as D[P] extends {[k: string]: any} ? P : never]?: D[P]// extends (...args: any[]) => any ? D[P] : never\n}\n\n\n/*\ntype d = {\n    onLoad: () => void\n    a: number\n    b: {}\n    c: DOMRect\n    d: string\n}\n\ntype e = {\n    a: {\n        aaa: () => void\n    }\n    x: {\n        xxx: () => void\n    }\n    onTest: () => void\n}\n\n\ntype Test = {}\n\ntype x = MethodsOf<d>\n\n\ntype l<T> = {\n    [P in keyof T]?: T[P]\n}\n\nconst l2: Listeners<d, e> = {\n}\n\nfor (let k in l2) {\n    const a = l2[k]\n}\n*/\n\ntype AsyncListeners<D, R> = {\n    done?: Listener<D, R>\n    fail?: Listener<D, any>\n}\n\nexport type Listener<D, R> = (event: R, scope: EventScoped<D>) => boolean | unknown //) | AsyncListeners<D, R>\n\n// Scope bindings\n\ntype Reactor<T> = (next: T, prev: T) => void\n\ntype Reactors<T> = {\n    [P in keyof T]?: Reactor<NoInfer<T[P]>>\n}\n\n// Scope joints\n\ntype EventActions<E> = {\n    [P in keyof E]?: (event: E[P]) => void\n}\n\nexport type Joint<T/*, P extends keyof T=keyof T*/> = (/*o: ObservableValue<T[P]>&EventBus<any>&T[P],*/ scope: ObservableScoped<T>) => Function|Promise<void>|void\n\ntype Joints<T> = {\n    [key: string]: Joint<NoInfer<T>>\n    // [P in keyof T]?: {\n    //     [key: string]: Joint<T, P>\n    // }\n}\n\n\nexport interface HubOptions<D, E> {\n    // инжекторы скоупа\n    injections?: Injectors<D>\n    // кастомизация скоупа\n    joints?: Joints<D>\n    // инжекторы по умолчанию\n    initials?: Injectors<D>\n\n    // изменения скоупа\n    reactions?: Reactors<D>\n    // слушатели скоупа\n    events?: Listeners<MethodsAndObjectsOf<E>, D>\n}\n\n\nexport type HubScope = {\n    $engine: Scheduler\n    $pipe: Pipe\n//    afterDestroy?: () => void\n}\n\nexport type HubEvents = {\n    afterInit: () => Stateable\n    afterDestroy: () => void\n}\n\n\n\n\nexport enum State {\n    Initializing,\n    Initialized,\n    Destroying,\n    Destroyed\n}\n\nexport interface Stateable {\n    readonly state: State\n}\n\nexport type Indexed<T=unknown> = T[]\n\nexport type Keyed<T=unknown> = {\n    [key: string]: T\n}\n\n\n\nlet _PatchingHub : Hub<unknown, any> = undefined\n\nexport const patch = (o: any) => {\n    _PatchingHub.scope.$engine.publish(ownTask(_PatchingHub.patch, o, _PatchingHub))\n    //_PatchingHub.scope.$pipe.push(ownTask(_PatchingHub.patch, o, _PatchingHub))\n}\n\nlet _ScopeKey: string|symbol\n\nconst scopeKeyAware = (key: string|symbol, fn: Function) => {\n    const prevScopeKey = _ScopeKey\n    _ScopeKey = key\n    fn()\n    _ScopeKey = prevScopeKey\n}\n\n\ninterface MonitoredThenable extends Thenable {\n    isPending: boolean\n    isDone: boolean\n    isFailed: boolean\n}\n\nconst createMonitoredThenable = (thenable: Thenable) : Thenable => {\n    const monitored = thenable.then((v: unknown) => {\n        mt.isDone = true\n        mt.isPending = false\n        return v\n    }, (v: unknown) => {\n        mt.isFailed = true\n        mt.isPending = false\n        return v\n    })\n    const mt : MonitoredThenable = {\n        isPending: true,\n        isFailed: false,\n        isDone: false,\n        then: (resolve: Function, reject?: Function) => monitored.then(resolve, reject)\n    }\n    return mt\n}\n\nconst isMonitoredThenable = (v: any) : v is MonitoredThenable => {\n    return (v as MonitoredThenable).then != null\n}\n\n// export const _iterator = <T extends []|{}>(source: T) : ValueIterator<T> => {\n//     if (_ScopeKey == null) {\n//         console.warn('Scope key not detected')\n//     }\n//     return iterator(source, String(_ScopeKey))\n// }\n\n// export const _next = <T extends {}|[], K extends keyof T=keyof T>(value: Value<T>) : T[K] => {\n//     if (_ScopeKey == null) {\n//         console.warn('Scope key not detected')\n//     }\n//     return value as any\n// }\n\n\nexport class Hub<D, E, S extends HubScope = HubScope, O extends HubOptions<D, E> = HubOptions<D, E>> implements Stateable {\n\n    options: O\n\n    scope: ObservableScoped<S&D&Keyed>\n//    context: ObservableScoped<S&D&Indexed>\n\n    subscriptions: Subscription[]\n    handlers: Handler<any>[]\n    joints: (MonitoredThenable|Function)[]\n\n    // TODO по сути здесь флаги\n    bindings: {[key: string]: Function}\n    events: /*{[P in keyof (E&M&Keyed)]?: Function}//*/ {[key: string]: Function}\n\n    state: State\n    _local: any\n//    _context: any\n    // initialized: boolean\n    // destroyed: boolean\n//    _Injectors: Injectors<any> = null\n\n\n    constructor (options: O, context: S = null, initScope: any = null) {\n\n        this.options = {} as O\n\n//        this.context = context\n//        this.scope = Object.assign({}, context as any)\n\n        this._local = {}\n//        this._context = {...context}\n\n\n        //let _InjectProp: string|symbol = null\n        const _InjectProps: {[k:string]: PropState} = {}\n\n        enum PropState {\n            None,\n            Injector,\n            Initial,\n            Default,\n            Context\n        }\n\n        // injector -> initial -> default -> context\n\n        \n        this.scope = new Proxy(this._local, {\n            get: (target, p) : any => {\n\n                if (p == '$context') {\n                    return context\n                }\n\n\n//                console.log('get', p)\n\n                let isInjected = false\n\n                let prop = _InjectProps[String(p)] || PropState.None\n                const prevPropState = _InjectProps[String(p)]\n                const prevProp = target[p]\n\n//                if () {\n\n                    if (/*!isInjected && this.state != State.Initializing &&*/ (p in target)) {\n                        isInjected = true\n//                        return (target[p] && isAutoTerminal() && target[p].$isTerminal) ? target[p].$value : target[p]\n                    }\n\n                    // if (this.state == State.Initializing) {\n                    //     isInjected = false\n                    //     prop = PropState.None\n                    //     target[p] = undefined\n                    // }\n\n                    // if (this.options.injections && (this.options.injections as any)['$engine']) {\n                    //     console.log('$engine', p, isInjected, prop)\n                    // }\n\n\n                    if (!isInjected && prop < PropState.Injector && this.options.injections) {\n                        const injector: Injector<any, any> = (this.options.injections as any)[p]\n                        if (injector !== undefined) {\n                            if (typeof injector === 'function') {\n                                _InjectProps[String(p)] = PropState.Injector\n                                scopeKeyAware(p, () => {\n                                    noAutoTerminal(() => {\n                                        // const entry = injector(this.scope)\n                                        // if (entry !== undefined) {\n                                        //     target[p] = entry\n                                        // }\n                                        target[p] = injector(this.scope)\n                                    })    \n                                })\n                            }\n                            else if (injector != null) {\n                                console.warn('Injector must be a function', p, injector)\n                                return\n                            }\n        \n                            isInjected = true\n//                            return target[p]\n                        }\n                    }    \n//                }\n\n\n                if (!isInjected && prop < PropState.Initial && initScope) {\n//                    console.log('--- check initial ---', p)\n                    let hasProp = false\n                    if (isValueSet(initScope)) {\n                        hasProp = initScope.$has(p) && initScope.$at(p).$value != null\n                    }\n                    else if (initScope[p] != null) {\n                        hasProp = true\n                    }\n                    if (hasProp) {\n                        _InjectProps[String(p)] = PropState.Initial\n                        target[p] = initScope[p]\n                        isInjected = true\n                    }\n                }\n\n\n                if (!isInjected && prop < PropState.Default && this.options.initials) {\n                    const injector: Injector<any, any> = (this.options.initials as any)[p]\n                    if (injector !== undefined) {\n                        if (typeof injector === 'function') {\n                            _InjectProps[String(p)] = PropState.Default\n                            scopeKeyAware(p, () => {\n                                noAutoTerminal(() => {\n                                    target[p] = injector(this.scope)\n                                })    \n                            })\n                        }\n                        else if (injector != null) {\n                            console.warn('Injector must be a function', p, injector)\n                            return\n                        }\n    \n                        isInjected = true\n//                        return target[p]\n                    }\n                }\n\n                if (!isInjected && prop < PropState.Context) {\n                    _InjectProps[String(p)] = PropState.Context\n                    noAutoTerminal(() => {\n                        target[p] = (context as any)[p]\n                    })\n                    isInjected = true\n                    // if (this.state == State.Initializing) {\n                    //     isInjected = false\n                    //     //_InjectProps[String(p)] = PropState.None\n                    // }\n                }\n\n                if (this.state == State.Initializing && (p == '$engine' || p == '$renderer' || p == '$pipe' )) {\n                    const out = (target[p] && isAutoTerminal() && target[p].$isTerminal) ? target[p].$value : target[p]\n                    delete target[p]\n                    _InjectProps[String(p)] = PropState.None\n                    isInjected = false\n                    return out\n                }\n\n//                return target[p]\n                return (target[p] && isAutoTerminal() && target[p].$isTerminal) ? target[p].$value : target[p]\n            },\n            set: (target, p, value) => {\n\n                // if (p == 'current') {\n                //     debugger\n                // }\n\n//                console.log('set scope value', p, value, p in target)\n\n                // FIXME заменить на инжектирование\n                if (!(p in target)) {\n                    target[p] = this.scope[String(p)] // неявно инжектируем\n                }\n\n                // isObservable\n                if (target[p] != null && (typeof (target[p] as ValueSet<any>).$at === 'function')) {\n                    target[p].$value = value\n                }\n                else {\n//                    console.error('Inject not an observable into scope', p, value)\n                    target[p] = value\n                }\n                return true\n            },\n            has: (target, p) => {\n                return Reflect.has(target, p) || Reflect.has(context, p) || (this.options.injections && Reflect.has(this.options.injections, p))\n            },\n            ownKeys: (target) : ArrayLike<string|symbol> => {\n                const keys: any = {...context, ...target, ...this.options.injections}\n                return Object.keys(keys)\n            },\n            getOwnPropertyDescriptor: (target, p) => {\n                return Reflect.getOwnPropertyDescriptor(target, p) \n                    || Reflect.getOwnPropertyDescriptor(context, p)\n                    || (this.options.injections && Reflect.getOwnPropertyDescriptor(this.options.injections, p))\n            },\n        })\n\n        this.subscriptions = []\n        this.handlers = []\n\n        this.events = {}\n        this.bindings = {}\n\n        this.joints = []\n\n        this.state = State.Initializing\n\n        // добавляем патч в очередь задач\n        this.scope.$engine.publish(ownTask(this.patch, options, this))\n    }\n\n    patch (optPatch: O) : void {\n\n        if (this.state == State.Destroying || this.state == State.Destroyed) {\n//            console.error('Try to patch destroyed hub')\n            throw new Error('Try to patch destroyed object')\n        }\n\n        let opts = mixin(this.options, optPatch).build(this.state == State.Initialized ? this.patchRules() : this.initRules())\n\n        if (opts === true || opts === false) {\n            throw new Error('Invalid patch option mix')\n        }\n\n//        console.log(this.options, optPatch)\n\n        const o = this.options = opts\n\n        let newSubscriptions: Subscription[] = []\n        let newHandlers: Handler<any>[] = []\n\n        // // Injectors\n        // if (optPatch.injections) {\n        //     // здесь мы должны обновлять измененные инжекторы\n\n        //     // this._Injectors = o.injections\n        //     // for (let k in o.injections) {\n        //     //     this.scope[k]\n        //     //     // const injector: Injector<any> = o.injections[k]\n        //     //     // if (injector !== undefined) {\n        //     //     //     let entry = null\n        //     //     //     if (typeof injector === 'function') {\n        //     //     //         entry = injector(this.scope)\n        //     //     //     }\n        //     //     //     else if (injector != null) {\n        //     //     //         console.warn('Injector must be a function', k, injector)\n        //     //     //         continue\n        //     //     //     }\n\n        //     //     //     if (this.scope[k] != entry) {\n        //     //     //         // TODO здесь нужно отписываться от элемента скоупа \n        //     //     //         this.scope[k] = entry\n        //     //     //     }\n        //     //     // }\n        //     // }\n        //     // this._Injectors = null\n        // }\n\n\n        // Joints\n        //TODO joints не должны обновляться динамически, но все равно нужно сделать обработку\n        if (optPatch.joints) {\n            const subscriptions = spySubscriptions(() => {\n                noAutoTerminal(() => {\n                    for (let k in o.joints) {\n                        let joint = o.joints[k].call(this, this.scope)\n                        if (joint && (joint as Thenable).then) {\n                            joint = createMonitoredThenable(joint)\n                        }\n                        this.joints.push(joint)\n                        // for (let i in o.joints[k]) {\n                        //     if (o.joints[k][i]) {\n                        //         const joint = o.joints[k][i].call(this, this.scope[k], this.scope)\n                        //         this.joints.push(joint)    \n                        //     }\n                        // }\n                    }        \n                })\n            })\n            newSubscriptions = newSubscriptions.concat(subscriptions)\n        }\n\n\n        // Reactors\n        if (optPatch.reactions) {\n            for (let k in o.reactions) {\n                if (o.reactions[k] && !this.bindings[k]) {\n\n                    this.bindings[k] = this.patchAware(o.reactions[k])//scopeKeyAware.bind(this, k, this.patchAware(o.reactions[k])) \n\n                    const entry = this.scope[k]\n                    const binding = this.bindings[k]\n\n                    if (isObservable(entry)) {\n            \n                        const sub = entry.$subscribe((next: any, prev: any) => {\n                            autoTerminalAware(() => {\n                                scopeKeyAware(k, () => {\n                                    binding(entry.$isTerminal ? next : entry, prev)\n                                })    \n                            })\n                        })\n\n                        newSubscriptions.push(sub)\n                    }\n                    else {\n                        binding(entry, undefined)\n                    }\n                }\n            }\n        }\n\n        // Events\n        if (optPatch.events) {\n            for (let i in o.events) {\n\n                if (o.events[i] && !this.events[i]) {\n\n                    this.events[i] = o.events[i] as any // FIXME\n\n                    for (let k in this.scope) {\n\n                        const bus = this.scope[k]\n                        const callback = this.events[i]\n                        \n                        if (isEventBus(bus) && bus.$hasEvent(i)) {\n\n                            const handler = bus.$on(i, (evt: any) => {\n                                noAutoTerminal(() => {\n                                    callback(evt, this.scope)\n                                })\n                            }, this)\n\n                            newHandlers.push(handler) // FIXME\n                        }\n                    }\n\n                    const events = o.events[i] as any\n                    if (typeof events === 'function') {\n                        if (isCallable(this.scope[i])) {\n\n                            const bus = this.scope[i]\n                            const callback = events\n\n                            const handler = bus.$on('done', (...args: any[]) => {\n                                noAutoTerminal(() => {\n                                    callback.apply(null, [...args, this.scope])\n                                })\n                            }, this)\n\n                            newHandlers.push(handler) // FIXME\n                        }\n                    }\n                    else if (typeof events === 'object') {\n                        const bus = this.scope[i]\n                        for (let k in events) {\n\n                            // FIXME добавить регистрацию событий\n\n                            const callback = events[k]\n                            \n                            if (callback && isEventBus(bus) /*&& bus.$hasEvent(i)*/) {\n    \n                                const handler = bus.$on(k, (...args: any[]) => {\n                                    noAutoTerminal(() => {\n                                        callback.apply(null, [...args, this.scope])\n                                    })\n                                }, this)\n    \n                                newHandlers.push(handler) // FIXME\n                            }    \n                        }\n                    }\n                }\n            }    \n        }\n\n\n\n        // освежаем реакции\n//        noAutoTerminal(() => {\n        // if (newSubscriptions.length) {\n        //     console.log('new subscriptions', newSubscriptions)\n        // }\n            for (let sub of newSubscriptions) {\n                if (sub == null) {\n                    console.error('Undefined subscription')\n                }\n                else {\n                    sub.observable.$touch(sub.subscriber)\n                }\n            }\n//        })\n\n        // TODO предполагается, что повторов подписок нет\n        this.subscriptions = this.subscriptions.concat(newSubscriptions)\n\n        this.handlers = this.handlers.concat(newHandlers)\n\n        if (this.state == State.Initializing) {\n            this.state = State.Initialized\n            this.events.afterInit?.(this, this.scope)\n        }\n\n        // if (this.events['patch']) {\n        //     this.events['patch'](this.options, this.scope)\n        // }\n    }\n\n    destroy (deferred?: Function) {\n\n        // исключаем повторное удаление\n        if (this.state == State.Destroying || this.state == State.Destroyed) {\n            return\n        }\n\n        // обрабатываем хуки отключения скоупа\n        let disjointPromise = null\n        if (this.joints.length > 0) {\n            const promises: Thenable[] = []\n            for (let disjoint of this.joints) {\n                if (disjoint) {\n                    if (isMonitoredThenable(disjoint)) {\n                        debugger\n                        disjoint.isPending && promises.push(disjoint)\n                    }\n                    else if (typeof disjoint === 'function') {\n                        const eff = disjoint()\n                        if (eff && (eff as Thenable).then) {\n                            promises.push(eff)\n                        }    \n                    }\n                }\n            }\n            this.joints = []\n            if (promises.length > 0) {\n                disjointPromise = Promise.all(promises)\n            }    \n        }\n\n        // удаляем подписки на изменения\n        for (let sub of this.subscriptions) {\n            if (sub == null) {\n                console.error('Undefined subscription')\n            }\n            else {\n                sub.observable.$unsubscribe(sub)\n            }\n        }\n\n        // удаляем подписки на события\n        for (let h of this.handlers) {\n            h.bus.$off(h)\n        }\n\n//        this.bindings = {}\n        this.events = {}\n//        this.subscriptions = []\n        this.handlers = []\n\n\n        if (disjointPromise) {\n            this.state = State.Destroying\n            disjointPromise.then(() => {\n                // завершаем удаление, только если статус на удалении\n                if (this.state == State.Destroying) {\n\n                    deferred && deferred()\n\n                    this.scope = null\n                    \n                    this.state = State.Destroyed\n\n                    console.log('Delayed destroy done')\n                }\n             }, (err) => {\n                console.log('Delayed destroy fail', err)\n             })\n        }\n        else {\n\n            deferred && deferred()\n\n            this.scope = null\n\n            this.state = State.Destroyed            \n        }\n\n\n        // // отложенное удаление\n        // if (promise) {\n        //     this.state = State.Destroying\n        //     promise.then(() => {\n        //         // продолжаем удаление, если оно не отменено\n        //         if (this.state == State.Destroying) {\n        //             //this.state = State.Initialized // ?\n        //             this.destroy()\n        //             //this.scope.$engine.immediate(this) // ?\n        //         }\n        //      }, (err) => {\n        //         console.log('Delayed destroy fail', err)\n        //      })\n        //     return\n        // }\n\n\n\n\n\n        // if (disjointPromise) {\n        //     this.state = State.Destroying\n        //     disjointPromise.then(() => {\n        //         // продолжаем удаление, если оно не отменено\n        //         // if (this.state == State.Destroying) {\n        //         //     //this.state = State.Initialized // ?\n        //         //     this.destroy()\n        //         //     //this.scope.$engine.immediate(this) // ?\n        //         // }\n        //      }, (err) => {\n        //         console.log('Delayed destroy fail', err)\n        //      })            \n        // }\n        // else {\n        //     this.state = State.Destroyed\n        // }\n\n    }\n\n    patchAware (callback: Function) {\n        return (...args: any[]) => {\n            const prevPatchingTarget = _PatchingHub\n            _PatchingHub = this\n            callback.apply(this, args)\n            _PatchingHub = prevPatchingTarget    \n        }\n    }\n\n    // emit (name: string, event: any) {\n    //     this.events[name](event, this.scope)\n    // }\n\n    initRules () : MixRules {\n        return {}\n    }\n\n    patchRules () : MixRules {\n        return {}\n    }\n\n    reset (nextOpts?: O) {\n        this.state = State.Initializing\n\n        if (nextOpts != null) {\n            console.warn('component update not yet ready', nextOpts, this)\n            this.patch(nextOpts)\n            return\n        }\n\n        // FIXME возможно, необходимо сначала почистить хаб\n        this.patch(this.options)\n    }\n\n}\n\n\n\n\n","export * from './Hub'\nexport * from './Html'\nexport * from './Gear'\nexport * from './Hub'\nexport * from './Blueprint'\nexport * from './value'\nexport * from './engine'\nexport * from './render'\nexport * from './mix'\nexport * from './pipe'","import { Proxied, __isProxy } from '../value'\nimport { Mixed, MixRules, buildOpts } from './utils'\n\n\n\nexport class Mixin<T=unknown> implements Mixed<T> {\n\n    _raw: (T|boolean)[]\n\n    constructor(...args: any[]) {\n\n        this._raw = []\n\n        for (let i = 0; i < args.length; i++) {\n            this.mix(args[i])  //FIXME  потенциальная потеря производительности\n        }\n    }\n\n    mixins () {\n        return this._raw\n    }\n\n\n    mix <X extends any|Mixin>(nextOpts: X) : Mixed<T&X> {\n        if (nextOpts != null) {\n            if (typeof (nextOpts as Mixin).mixins === 'function') {\n//                console.log(nextOpts.mixins())\n                this._raw = this._raw.concat((nextOpts as any).mixins())//(nextOpts as any)._raw)\n            }\n            else {\n                this._raw.push(nextOpts as any)\n            }\n        }\n        return this as any\n    }\n\n    mergeBefore(prevOpts: any) : Mixed<T> {\n        if (prevOpts != null) {\n            if ((prevOpts as Mixed<T>).mix !== undefined) {\n                debugger\n                this._raw = prevOpts._raw.concat(this._raw)\n            }\n            else {\n                this._raw.unshift(prevOpts)\n            }\n        }\n        return this\n    }\n\n    build (rules?: MixRules) : T|boolean {\n\n        if (this._raw.length == 0) {\n            return undefined\n        }\n\n        // немножко эвристики для кейсов, когда опции отключаются последним сегментом\n        if (this._raw[this._raw.length-1] === false) {\n            return false\n        }\n        if (this._raw[0] === true && this._raw.length == 1) {\n            return true\n        }\n\n        let o = {} as T\n        let clear = false\n\n        for (let i = 0; i < this._raw.length; i++) {\n            if (this._raw[i] === true) {\n                clear = false\n        //        continue\n            }\n            else if (this._raw[i] === false) {\n                clear = true\n        //        continue\n            }\n            else {\n                if (clear) {\n                    o = {} as T\n                }\n                o = buildOpts(o, this._raw[i], rules)\n                clear = false\n            }\n        }\n\n        return clear ? {} as T : o\n    }\n\n    get entries () {\n        return this._raw\n    }\n\n}\n\n\n\nexport const lastEffectiveValue = <T>(o: Mixed<T>) : T|boolean => {\n    let last = undefined\n    for (let value of o.entries) {\n      if (value === true || value === false) {\n        last = (last === !value || last == null) ? value : last\n      }\n      else if (value != null) {\n          last = value\n      }\n    }\n    return last\n}\n\n\nexport const mixin = <T>(...args: T[]) : Mixed<T> => {\n    return new (Function.prototype.bind.apply(Mixin, [null, ...args]))\n}\n\nexport const isMixed = <T>(obj: Mixed<T>|Proxied|T) : obj is Mixed<T> => {\n    if (obj) {\n        if (false && (obj as any)[__isProxy]) {\n            return ('mix' in obj)\n        }\n        else {\n            return typeof (obj as Mixed<T>).mix === 'function'\n        }\n    }\n    return false\n//    return !!(obj && (obj as Mixed<T>).mix)\n}\n","export * from './Mixin'\nexport * from './utils'","import { isValueSet } from \"../value\"\nimport { isMixed } from \"./Mixin\"\n\n\n\n\nexport interface Mixed<T> {\n    build: (rules: MixRules) => T|boolean\n    mix: <X>(nextMix: X) => Mixed<T&X>\n    readonly entries: any[]\n}\n\nexport type MixRules = {\n    [key: string]: Function\n}\n\n\n\nexport const deepClone = (o: any) : any => {\n    if (o != null) {\n      if (o.constructor === Object) {\n        const copy = {} as {[key: string]: any}\n        for (let i in o) {\n          copy[i] = deepClone(o[i])\n        }\n        o = copy\n      }\n      else if (o instanceof Array) {\n        const copy = []\n        for (let i = 0; i < o.length; i++) {\n          copy[i] = deepClone(o[i])\n        }\n        o = copy\n      }\n    }\n    return o\n  //  return JSON.parse(JSON.stringify(o))\n  }\n  \n\n const buildProp = (prop: any, nextProp: any, rule?: Function) : any => {\n\n    if (nextProp && isValueSet(nextProp)) {\n        nextProp = nextProp.$value\n    }\n\n    if (rule) {\n        prop = rule(prop, nextProp)\n    }\n    else {\n      if (prop && nextProp !== undefined && (prop.constructor === Object || prop.constructor === Array)) {\n        prop = buildOpts(prop, nextProp)\n      }\n      else if (nextProp !== undefined) {\n        if (nextProp != null && (nextProp.constructor === Object || nextProp.constructor === Array)) {\n          prop = deepClone(nextProp)\n  //        console.log('deep', nextProp, prop)\n        }\n        else {\n          prop = nextProp\n        }\n      }\n    }\n  \n    return prop\n}\n  \n\nexport const buildOpts = (opts: any, nextOpts: any, rules?: MixRules) : any => {\n\n    if (nextOpts && isValueSet(nextOpts)) {\n        console.warn('Resolve observable opts', nextOpts)\n        nextOpts = nextOpts.$value\n    }\n\n    if (typeof nextOpts == 'function') {\n    //    console.log('resolve func mix', nextOpts, opts)\n        nextOpts = nextOpts()\n    }\n    else if (typeof nextOpts == 'string') {\n        console.warn('string opts', nextOpts)\n    }\n    else if (typeof nextOpts == 'number') {\n        console.warn('number opts', nextOpts)\n    }\n\n    // TODO возможно, здесь нужен цикл до тех пор, пока не исчезнет примесь\n    if (nextOpts && typeof (nextOpts as Mixed<any>).mix === 'function' /*isMixed(nextOpts)*/) {\n      nextOpts = nextOpts.build(rules)\n    }\n\n\n    // если nextOpts является объектом\n    if (nextOpts === undefined) {\n        // \n    }\n    else if (nextOpts === null) {\n        opts = null\n    }\n    else if (nextOpts.constructor === Object) {\n        for (let i in nextOpts) {\n        // if (i[0] == '!') {\n        //   opts[i.substr(1)] = nextOpts[i]\n        // }\n        // else if (i[0] == '+') {\n        //   // TODO\n        // }\n        // else if (i[0] == '-') {\n        //   // TODO\n        // }\n        // else {\n            opts[i] = buildProp(opts[i], nextOpts[i], rules && (rules[i] || rules[i[0]]))\n        // }\n        }\n    }\n    // если nextOpts является массивом\n    else if (nextOpts.constructor === Array) {\n        for (let i = 0; i < nextOpts.length; i++) {\n        opts[i] = buildProp(opts[i], nextOpts[i], rules && (rules[i]/* || rules[i[0]]*/))\n        }\n    }\n    else if (nextOpts instanceof Promise) {\n        return Promise.all([opts, nextOpts]).then(o => {\n        return buildOpts(o[0], o[1], rules)\n        })\n    }\n    else {//if (nextOpts !== undefined) {\n        opts = nextOpts\n    }\n\n    return opts\n}\n","import { ownTaskFilter, Scheduler, subscriptionTaskFilter, Task, unknownTaskFilter } from \"./utils\";\n\n\nconst avgTimeInterval = (t0: number, t1: number, total: number) => {\n    return Number((Math.round(t1 - t0)/total).toFixed(5))\n}\n\n\nexport class AsyncEngine<T extends Task = Task> implements Scheduler<T> {\n\n    tasks: T[]\n    deferred: T[]\n    subscriptions: Scheduler[]\n    scheduled: boolean\n    processing: boolean\n    name: string\n\n    constructor (name?: string) {\n        this.tasks = []\n        this.subscriptions = []\n        this.deferred = []\n        this.scheduled = false\n        this.name = name || 'default'\n    } \n\n    publish(task: T): void {\n\n        if (task.done) {\n            return\n        }\n        \n        this.tasks.push(task)\n\n        !this.scheduled && this.schedule()\n    }\n\n    subscribe(engine: Scheduler): boolean {\n        if (this.subscriptions.indexOf(engine) == -1) {\n            this.subscriptions.push(engine)\n            return true\n        }\n        return false\n    }\n\n    unsubscribe(engine: Scheduler) {\n        this.subscriptions = this.subscriptions.filter(sub => sub != engine)\n    }\n\n    task (fn: Function, arg?: any, target?: any) : Task {\n        return {fn, arg, target, engine: this}\n    }\n\n    schedule () {\n\n        if (this.scheduled) {\n            return\n        }\n\n        this.scheduled = true\n        setTimeout(() => {\n//            console.log(`[${this.name}] tick start`, this.tasks.length)\n            const t0 = performance.now()\n\n            this.scheduled = false\n            this.processing = true\n//            console.log('tick')\n\n            let tasks = this.tasks\n            this.tasks = []\n\n            this.deferred = this.deferred.concat(this.process(tasks))\n\n            // отправляем чужие задачи дальше по конвейеру\n            if (this.tasks.length == 0) {\n                this.deferred\n                    .filter(subscriptionTaskFilter(this.subscriptions))\n                    .filter(unknownTaskFilter(this.subscriptions))\n            }\n            else if (!this.scheduled) {\n                console.error('Non scheduled tasks detected', this.tasks)\n            }\n\n            this.processing = false\n\n            const t1 = performance.now()\n            console.log(`[${this.name}] patch end`, tasks.length, Math.round(t1 - t0), avgTimeInterval(t0, t1, tasks.length)/*, deleted ? '-'+deleted : ''*/)\n        })\n    }\n\n    process (tasks: T[]) : T[] {\n        return tasks.filter(ownTaskFilter(this))\n    }\n\n    get isProcessing () {\n        return this.processing\n    }\n\n\n}","import { ownTaskFilter, Scheduler, subscriptionTaskFilter, Task, unknownTaskFilter } from \"./utils\";\n\n\n\nexport class BufferedEngine<T extends Task = Task> implements Scheduler<T> {\n\n    tasks: Task[]\n    subscriptions: Scheduler[]\n    processing: boolean\n\n    constructor () {\n        this.tasks = []\n        this.subscriptions = []\n        this.processing = false\n    } \n\n    publish(task: T): void {\n\n        if (task.done) {\n            return\n        }\n        \n        this.tasks.push(task)\n    }\n\n    subscribe(engine: Scheduler): boolean {\n        if (this.subscriptions.indexOf(engine) == -1) {\n            this.subscriptions.push(engine)\n            return true\n        }\n        return false\n    }\n\n    unsubscribe(engine: Scheduler) {\n        this.subscriptions = this.subscriptions.filter(sub => sub != engine)\n    }\n\n    task (fn: Function, arg?: any, target?: any) : Task {\n        return {fn, arg, target, engine: this}\n    }\n\n    flush () {\n        this.processing = true\n\n        let tasks = this.tasks\n        this.tasks = []\n\n        tasks\n            .filter(ownTaskFilter(this))\n            .filter(subscriptionTaskFilter(this.subscriptions))\n            .filter(unknownTaskFilter(this.subscriptions))\n\n        if (this.tasks.length > 0) {\n            this.flush()\n        }\n\n        this.processing = false\n    }\n\n    get isProcessing () {\n        return this.processing\n    }\n}\n","export * from './utils'\nexport * from './async'\nexport * from './buffered'\nexport * from './pipe'","import { Pipe, Scheduler, Task } from \"./utils\";\n\n\n\nclass SimplePipe implements Pipe {\n\n    head: Scheduler\n    subscriptions: [Scheduler, Scheduler][]\n\n    constructor (schedulers: Scheduler[]) {\n        this.head = schedulers[0]\n        this.subscriptions = []\n        for (let i = 1; i < schedulers.length; i++) {\n            if (schedulers[i-1].subscribe(schedulers[i])) {\n                this.subscriptions.push([schedulers[i-1], schedulers[i]])\n            }\n        }\n    }\n\n    push(task: Task<any>): Pipe {\n        this.head.publish(task)\n        return this\n    }\n    \n    asap(task: Task<any>): Pipe {\n        if (task.engine && task.engine.isProcessing) {\n            task.engine.publish(task)\n        }\n        else {\n            this.head.publish(task)\n        }\n        return this\n    }\n\n    destroy () {\n        this.subscriptions.forEach(sub => {\n            sub[0].unsubscribe(sub[1])\n        })\n    }\n}\n\n\n\nexport const pipe = (...schedulers: Scheduler[]) => {\n    return new SimplePipe(schedulers)\n}","\n\nexport type Task<T=any> = {\n    key?: string\n    fn: Function\n    arg?: any\n    target?: T\n    engine?: Scheduler\n    done?: boolean\n}\n\n\nexport interface Scheduler<T extends Task = Task> {\n\n    publish (task: T) : void\n\n    subscribe (engine: Scheduler) : boolean\n    \n    unsubscribe (engine: Scheduler) : void\n\n    task (fn: Function, arg?: any, target?: any) : Task\n\n    readonly isProcessing: boolean\n}\n\n\n\n\n// - вычисления\n// - патчи\n// - отрисовка\n\nexport interface Pipe {\n    // - добавить задачу в указанный планировщик\n    // - добавить в конвейер задачу для указанного планировщика\n    // - добавить задачу в ближайший тик\n    // - добавить задачу в очередь тиков\n    // - исполнить задачу прямо сейчас в указанном планировщике или добавить в конвейер\n\n    // добавляем задачу в начало конвейера\n    push (task: Task) : Pipe\n    // исполняем задачу в ближайший тик планировщика\n    asap (task: Task) : Pipe\n}\n\n\nexport const ownTask = (fn: Function, arg?: any, target?: any) => {\n    return {fn, arg, target}\n}\n\n\n\n\nexport const ownTaskFilter = (owner: Scheduler) => (task: Task) => {\n    if (!task.engine || task.engine == owner) {\n//        console.log('task', task.arg, task.target)\n        // исполняем задачу\n        task.fn?.call(task.target, task.arg)\n        task.done = true\n    }\n    else {\n        return true\n    }\n}\n\nexport const subscriptionTaskFilter = (subscriptions: Scheduler[]) => (task: Task) => {\n    const engine = subscriptions.find((sub) => sub == task.engine)\n    if (engine) {\n        engine.publish(task)\n    }\n    else {\n        return true\n    }\n}\n\nexport const unknownTaskFilter = (subscriptions: Scheduler[]) => (task: Task) => {\n    subscriptions.forEach(sub => {\n        sub.publish(task)\n    })\n}\n","\n\n\nexport enum ItemOp {\n    ADD = 'add',\n    DELETE = 'delete',\n    UPDATE = 'update'\n}\n\nexport type KVItem<T=any> = {\n    key: string\n    value: T\n    op?: ItemOp\n} \n\n\ntype Link = {\n    key: string\n    index: number\n\n    item?: KVItem\n    before?: Link\n    after?: Link\n\n    item2?: KVItem\n    before2?: Link\n    after2?: Link\n\n    merged?: boolean\n}\n\n\n\nconst toSequence = (items: KVItem[]) : [Link, {[key: string]: Link}] => {\n    let head: Link = null\n    let tail: Link = null\n    const map: {[key: string]: Link} = {}\n    items.forEach((itm, i) => {\n        const link: Link = {\n            item: itm,\n            key: itm.key,\n            index: i,\n            before: tail,\n            after: null\n        }\n        map[itm.key] = link\n        if (head == null) {\n            head = link\n        }\n        if (tail) {\n            tail.after = link\n        }\n        tail = link\n\n    })\n    return [head, map]\n}\n\n// const toMap = (items: KVItem[]) : {[key: string]: KVItem} => {\n//     const map: {[key: string]: KVItem} = {}\n//     items.forEach(itm => {\n//         map[itm.key] = itm\n//     })\n// }\n\n\n// const mergeLinks = (prevLink: Link, nextLink: Link) : Link => {\n\n// }\n\n\n\nexport const reconcile = (prevItems: KVItem[], nextItems: KVItem[]) : KVItem[] => {\n\n    // TODO должна быть проверка на уникальность ключей\n\n//    console.log('----------------------------------------------')\n\n    if (prevItems.length == 0) {\n        return nextItems.map(itm => {\n            itm.op = ItemOp.ADD\n            return itm\n        })\n    }\n    if (nextItems.length == 0) {\n        return prevItems.map(itm => {\n            itm.op = ItemOp.DELETE\n            return itm\n        })\n    }\n\n\n\n    //  преобразуем массивы в последовательности\n    const [prevSeq, prevMap] = toSequence(prevItems)\n    const [nextSeq, nextMap] = toSequence(nextItems)\n\n    const seqMap: {[key: string]: Link} = {}\n    // сливаем последовательности\n    for (let k in prevMap) {\n        seqMap[k] = prevMap[k]\n    }\n    for (let k in nextMap) {\n        if (!seqMap[k]) {\n            seqMap[k] = {key: k, index: -1}//nextMap[k].index}\n        }\n    }\n    for (let k in nextMap) {\n        const next = nextMap[k]\n        const link = seqMap[k]\n        link.item2 = next.item\n        link.before2 = next.before && seqMap[next.before.key]\n        link.after2 = next.after && seqMap[next.after.key]\n    }\n\n    const sequence: Link[] = []\n\n    const head = seqMap[nextItems[0].key]\n\n//    console.log(seqMap)\n\n    let tail = head\n    // двигаемся вдоль новой головы до первого общего узла\n    while (tail && tail.item == null) {\n        tail.merged = true\n        sequence.push(tail)\n        tail = tail.after2\n    }\n    let saved = tail\n    if (tail == null) {\n        tail = seqMap[prevItems[0].key]\n    }\n    // ищем старую голову\n    while (tail.before) {\n        tail = tail.before\n    }\n    // двигаемся вдоль старой головы до первого общего узла\n    while (tail && tail.item2 == null) {\n        tail.merged = true\n        sequence.push(tail)\n        tail = tail.after\n    }\n\n    // возвращаемся к прерванному обходу\n    tail = saved\n    while (tail) {\n        tail.merged = true\n        sequence.push(tail)\n\n        if (tail.after2) {\n            if (tail.after2.index > tail.index) {\n                // собираем старые узлы после\n                let node = tail.after\n                while (node && node.item2 == null && !node.merged) {\n                    node.merged = true\n                    sequence.push(node)\n                    node = node.after\n                }\n            }\n            else {\n                // собираем старые узлы до\n                let node = tail.before\n                while (node && node.item2 == null && !node.merged) {\n                    node.merged = true\n                    sequence.push(node)\n                    node = node.before\n                }\n            }\n        }\n\n        tail = tail.after2\n    }\n\n\n    // двигаемся назад по новому хвосту\n    tail = sequence[sequence.length-1]\n    while (tail && tail.item == null) {\n        tail = tail.before2\n    }\n    while (tail) {\n        if (!tail.merged) {\n            sequence.push(tail)\n        }\n        tail = tail.after\n    }\n\n\n//     console.log(sequence)\n\n     return sequence.map(link => {\n         const item: KVItem = {\n             key: link.key,\n             value: null//link.item || link.item2\n         }\n\n         if (link.item && link.item2) {\n             item.op = ItemOp.UPDATE\n             item.value = link.item.value\n         }\n         else if (link.item) {\n             item.op = ItemOp.DELETE\n            item.value = link.item.value\n         }\n         else {\n             item.op = ItemOp.ADD\n             item.value = link.item2.value\n            }\n\n         return item\n     })\n}","export * from './utils'\nexport * from './node'\n","import { Keyed } from \"../Hub\";\nimport { EMPTY, EventBus, Handler, Observable, ObservableValue, PublishFunc, Subscriber, Subscription } from \"../value\";\nimport { PubSub } from \"../value/pubsub\";\nimport { Dom, Renderer } from \"./utils\";\n\n\n\n\n//export type DomEvents = GlobalEventHandlersEventMap\n\n\n// const DOM_EVENTS: Keyed<boolean> = {\n//     click: true,\n//     change: true,\n//     input: true,\n//     focus: true,\n//     blur: true\n// }\n\n\nexport class DomNode<T=unknown, E=unknown> extends PubSub<T, E> implements Dom {\n\n    _ref: Function\n    _el: T\n//    _subscriptions: Subscription[]\n    _effects: Function[]\n\n    constructor (renderer: Renderer) {\n        super(renderer.events)\n\n//        this._subscriptions = []\n        this._effects = []\n    }\n\n\n    // get $ref () {\n    //     return this._ref\n    // }\n\n    get $eventHandlers () {\n        const result: Keyed<Function> = {}\n        this._handlers.forEach(h => {\n            result[h.name] = (e: any) => {\n                this.$emit(h.name, e)\n            }\n        })\n        return result\n    }\n\n    get $isSubscribed () {\n        return this._subscriptions.length > 0\n    }\n    \n    get $value() : T {\n        return this._el\n    }\n\n    // set $value\n    \n    // get $uid() : string {\n    //     return null\n    // }\n    \n    // get $isTerminal() : boolean {\n    //     return true\n    // }\n\n    // $subscribe(subscriber: Subscriber<T>|PublishFunc<T>): Subscription {\n        \n    //     // проверяем, что такая подписка уже есть\n    //     for (let sub of this._subscriptions) {\n    //         if (sub.subscriber == subscriber || sub.subscriber.$publish == subscriber) {\n    //             return sub\n    //         }\n    //     }    \n\n    //     if (typeof subscriber === 'function') {\n    //         subscriber = {\n    //             $publish: subscriber\n    //         }\n    //     }\n\n    //     const sub: Subscription = {\n    //         subscriber,\n    //         observable: this\n    //     }\n\n    //     this._subscriptions.push(sub)\n\n\n    //     return sub\n    // }\n\n    // $unsubscribe(subscription: Subscription|Subscriber<T>|PublishFunc<T>): void {\n    //     this._subscriptions = this._subscriptions.filter(sub => sub != subscription && sub.subscriber != subscription && sub.subscriber.$publish != subscription)\n    // }\n\n    $publish(next: any, prev?: any, keys?: {[key: string]: any}): void {\n        this._el = next\n        this._subscriptions.forEach(sub => sub.subscriber.$publish(next))\n    }\n\n    $touch(subscriber: Subscriber<T>): void {\n//        console.log('dom value', this._el)\n        subscriber.$publish(this._el, undefined, EMPTY)\n\n        // if (this._el) {\n        //     console.log('dom value already initialized')\n        // }\n//        throw new Error(\"Method not implemented.\");\n    }\n\n    $untouch (): void {\n\n    }\n\n    // $nextFrame (el: HTMLElement) {\n\n    // }\n\n    // get $effects () {\n    //     return this._effects\n    // }\n\n    // $addEffect (fn: Function) {\n    //     this._effects.push(fn)\n    // }\n\n    // $applyEffects (engine: Engine<unknown>) {\n    //     this._effects.forEach(eff => engine.scheduleTask(eff))\n    //     this._effects = []\n    // }\n\n}","import { Keyed } from \"../Hub\"\n\ntype VNode = any\n\n// export type VNodeOptions = {\n//     tag?: string\n// }\n\n\nexport interface Dom {\n//    readonly $ref: Function\n    readonly $eventHandlers: Keyed<Function>\n    readonly $isSubscribed: boolean\n//    $nextFrame (el: HTMLElement) : void\n}\n\n\nexport interface Renderer<P=any, H=any> {\n    attach (root: Element, node: Renderable) : void\n    detach (node: Renderable) : void\n    readonly events: Keyed<any>\n    isAttached (node: Renderable) : boolean\n//    createVNode () : VNode//tuple: [string|number, {}, {}, VNode[]]) : VNode\n}\n\nexport interface Renderable {\n    render(asRoot?: boolean) : VNode\n    readonly isRoot : boolean\n}\n\nexport interface VNodeFactory {\n    createVNode <P, O>(key: string, vnodeProps: P, htmlProps: O&Dom, children?: any[]) : VNode\n}\n//export type VNodeFactory = <P, O>(key: string, vnodeProps: P, htmlProps: O&Dom, children?: any[]) => VNode\n\n\n\n\nexport const buildClassName = (cn: string, co: {[key: string]: boolean} | string | string[]) => {\n    const classes: {[key: string]: boolean} = {}\n    if (cn) {\n        cn.split(' ').forEach(n => {\n            classes[n] = true\n        })\n    }\n    if (!co) {\n\n    }\n    else if (Array.isArray(co)) {\n        for (let cls of co) {\n            classes[cls] = true\n        }\n    }\n    else if (typeof co === 'string') {\n        classes[co] = true\n    }\n    else {\n        for (let i in co) {\n            if (co[i] !== undefined) {\n                classes[i] = co[i]\n            }\n        }\n        //Object.assign(classes, co)\n    }\n    const cn_a: string[] = []\n    for (let i in classes) {\n        if (classes[i]) {\n            cn_a.push(i)\n        }\n    }\n    return cn_a.length ? cn_a.join(' ') : null\n}\n","import { Mixin } from './mix'\n\nconst Option = (x: any, y: any) => {\n    return new Mixin(x, y)\n  }\n  \n  //const State = (x, y) => {return new State(x, y)}\n  \n  const OptionCollection = (x: {[key: string]: any}, y: {[key: string]: any} | boolean) => {\n  \n    if (y === false) {\n      return false\n    }\n    else if (y === true) {\n        return true\n    }\n  \n    // if (x === undefined && y == undefined) {\n    //   return \n    // }\n  \n      if (y && y.constructor != Object) {\n          x && console.warn('Ignore prev options', x)\n          return y\n      }\n      if (x && x.constructor != Object) {\n          y && console.warn('Ignore new options', y)\n          return x\n      }\n  \n  //    console.log(x && x.constructor, y && y.constructor)\n  \n    let kv: {[key: string]: any} = undefined\n    if (x != null) {\n      kv = kv || {}\n      for (let i in x) {\n        kv[i] = new Mixin(x[i])\n      }\n    }\n    if (y != null) {\n      kv = kv || {}\n//      console.log('y', y)\n      for (let i in y) {\n        kv[i] = kv[i] ? (kv[i] as Mixin).mix(y[i]) : new Mixin(y[i])\n      }\n    }\n  //  console.log(kv)\n    return kv\n  }\n  \n  const OptionArray = (x: [], y: []) => {\n    // TODO\n  }\n  \n  const StringArray = (x: string[], y: string[]) => {\n    let arr = []\n    if (x != null) {\n      arr = [].concat(x)\n    }\n    if (y != null) {\n      arr = arr.concat(y)\n    }\n    return arr\n  }\n  \n  const Overlap = (x: any, y: any) => {\n    return y\n  }\n  \n  \n  const OptionCollectionOverlap = (x: any, y: any) => {\n\n//    console.log('overlap', x, y)\n  \n      if (y === false) {\n          return false\n        }\n        else if (y === true) {\n            return x\n        }\n\n      if (y && y.constructor != Object) {\n          x && console.warn('Ignore prev options', x)\n          return y\n      }\n      if (x && x.constructor != Object) {\n          y && console.warn('Ignore new options', y)\n          return x\n      }\n  \n//     console.log(x && x.constructor, y && y.constructor)\n  \n    let kv: {[key: string]: any} = {}\n    if (x != null) {\n      for (let i in x) {\n        kv[i] = new Mixin(x[i])\n      }\n    }\n    if (y != null) {\n//      console.log('y+', y)\n      for (let i in y) {\n        kv[i] = new Mixin(y[i])\n      }\n    }\n//    console.log(JSON.stringify(kv))\n    return kv\n  }\n  \n  \n  \n  \n  export const DefaultRules = {\n    Option,\n    OptionCollection,\n    OptionArray,\n    StringArray,\n    Overlap,\n    OptionCollectionOverlap\n  }\n  ","import { EventBus, Handler } from './utils'\n\n\nlet _SpyHandlers : Handler<any>[] = null\n\nexport const spyHandlers = (fn: Function) : Handler<any>[] => {\n    const prevHandlers = _SpyHandlers\n    _SpyHandlers = []\n    fn()\n    const result = _SpyHandlers\n    _SpyHandlers = prevHandlers\n    return result\n}\n\n\n\nexport class EventNode<E> implements EventBus<E> {\n\n    _global: {[key: string]: any}\n    _events: {[key: string]: any}\n    _handlers: Handler<any>[]\n\n    constructor (global?: {[key: string]: any}) {\n        this._global = global\n        this._events = {}\n        this._handlers = []\n    }\n\n    $on(name: string, callback: Function, target: any) : Handler<E> {\n        const h = {name, callback, target, bus: this}\n        this._handlers.push(h)\n\n        if (_SpyHandlers) {\n            _SpyHandlers.push(h)\n        }\n\n        return h\n    }\n    $off(ctl: any): void {\n        this._handlers = this._handlers.filter(l => l != ctl && l.callback != ctl && l.target != ctl)\n    }\n    $emit(name: string, ...args: any[]): void {\n//        console.log('emit', name, args, this._handlers)\n        // TODO возможно, сообщения стоит здесь только помещать в очередь\n        this._handlers.forEach(h => {\n            if (h.name == name) {\n//                console.log('call handler')\n                h.callback.apply(h.target, args)\n            }\n        })\n    }\n    $event (name: string) : Function {\n        this._events[name] = true\n        return (...args: any[]) => this.$emit.apply(this, [name, ...args])\n    }\n    $hasEvent (name: string) : boolean {\n        return !!this._events[name] || (this._global != null && this._global[name])\n    }\n\n}\n\n","import { EventNode } from \"./bus\"\nimport { ObservableValueSet, ValueSet, Node } from \"./node\"\nimport { isValueSet, proxify } from \"./observable\"\nimport { EventBus, Handler, Observable, PublishFunc, Subscriber, Subscription, Thenable, Value } from \"./utils\"\n\n\nexport interface Callable {\n    $call (thisArg: any, args: any[]) : any\n}\n\nexport type CallableEvents<R> = {\n    done: () => R\n    fail: () => any\n    wait: () => void\n}\n\n\nclass _Node<T, E> extends Node<T, E> {\n\n}\n\n\nclass CallableNode<T extends Function, E=any> extends Function implements Value<T>, EventBus<E>, Observable<T>, Callable {\n    \n    _memoValue: T\n//    _events: EventNode<E>\n    _value: _Node<T, E>\n\n    constructor (initValue: T) {\n        super()\n        this._memoValue = initValue\n        this._value = new _Node()\n        //this._events = new EventNode()\n    }\n    \n    $subscribe(subscriber: Subscriber<T> | PublishFunc<T>): Subscription {\n        return this._value.$subscribe(subscriber)\n    }\n    $unsubscribe(subscription: Subscriber<T> | PublishFunc<T> | Subscription): void {\n        this._value.$unsubscribe(subscription)\n    }\n    $touch(subscriber: Subscriber<T>): void {\n        //throw new Error(\"Method not implemented.\")\n    }\n    $untouch(): void {\n        //throw new Error(\"Method not implemented.\")\n    }\n    $publish(next: any, prev?: any, keys?: {[key: string]: any}): void {\n        this._value.$publish(next, prev, keys)\n    }\n\n    $call(thisArg: any, args: any[]) {\n        if (this._memoValue == null) {\n            console.warn('Possible uninitialized callable', args)\n        }\n        let result = this._memoValue != null ? this._memoValue.apply(thisArg, args) : args[0]\n        if (isValueSet(result)) {\n            result = result.$value\n        }\n        if (result && (result as Thenable).then) {\n            this.$emit('wait')\n            result = result.then((response: any) => {\n                this.$emit('done', response)\n//                this.$publish(response)\n                return response\n            }, (fail: any) => {\n                this.$emit('fail', fail)\n                return fail\n            })\n        }\n        else {\n            this.$emit('done', result)\n//            this.$publish(result)\n        }\n        return result\n    }\n\n    $emit(name: string, ...args: any[]): void {\n        this._value.$emit.apply(this._value, [name, ...args])\n    }\n    $on(name: string, callback: Function, target?: unknown): Handler<E> {\n        return this._value.$on(name, callback, target)\n    }\n    $off(callbackOrTargetOrListener: unknown): void {\n        this._value.$off(callbackOrTargetOrListener)\n    }\n\n    $event(name: string): Function {\n        return null\n        //throw new Error(\"Method not implemented.\")\n    }\n    $hasEvent(name: string): boolean {\n        return false\n        //throw new Error(\"Method not implemented.\")\n    }\n    \n    set $value (value: T) {\n        this._memoValue = value\n    }\n\n    get $value (): T {\n        return this._memoValue\n    }\n\n    get $uid () {\n        return ''\n    }\n\n    get $isTerminal (): boolean {\n        return true\n    }\n\n    // FIXME убрать после проверки наличия событий в Hub\n    $has () {\n        return false\n    }\n\n    $at (): any {\n        return null\n    }\n\n}\n\n\n\nexport const callable = <T extends Function>(initValue: T) : /*Value<T>&*/T => {\n    //const value = isValueSet(initValue) ? initValue.$value : initValue\n    return proxify(initValue, new CallableNode(initValue) as any)\n}\n\n\nexport const isCallable = (v: any) : v is Callable => {\n    return v && typeof (v as Callable).$call === 'function'\n}","import { closeTransaction, openTransaction, transactionUpdates } from './engine'\nimport { ObservableValueSet, spyGetters, ValueSet, UidFunc } from './node'\nimport { autoTerminalAware, proxify, ObservableNode, isValueSet } from './observable'\nimport { EMPTY, Observable, PublishFunc, Subscriber, Subscription } from './utils'\n\n\ninterface Computable {\n    $compute () : void\n}\n\n//type ComputableValue<T> = ObservableValue<T>&Computable\n\ntype Computor<T> = () => T\n\n\nclass ComputableNode<T> extends ObservableNode<T> implements Computable {\n\n    _computor: Computor<T>\n    _touched: boolean\n    _publishers: Subscription[]\n    _sources: Set<Observable<unknown>>\n    _computing: boolean\n\n    constructor (computor: Computor<T>, initValue?: T, entryUidFunc?: UidFunc) {\n        super(initValue, undefined, undefined, entryUidFunc)\n\n        this._computor = computor\n        this._initialized = false // отменяем инициализацию\n        this._sources = new Set()\n        //this._publishers = []\n        //this._touched = false\n    }\n\n    $compute () : T {\n\n        if (this._computing) {\n            return this._memoValue\n        }\n\n        this._computing = true\n\n        let next: T = undefined\n        // this._publishers.forEach(dep => {\n        //     if ((dep.observable as any)._destroyed) {\n        //         console.warn('Destroyed dependency detected', dep)\n        //         this._destroyed = true\n        //     }\n        // })\n        // if (this._destroyed) {\n        //     this._publishers.forEach(dep => {\n\n        //     })\n        //     return undefined\n        // }\n        // this._publishers = []\n\n//         this._sources.forEach(dep => {\n//             if ((dep as any)._destroyed) {\n//                 // TODO поместить в очередь на удаление\n//                 this._destroyed = true\n//             }\n//         })\n//         if (this._destroyed) {\n//             this._sources.forEach(dep => {\n//                 dep.$unsubscribe(this)\n//             })\n//             this._sources.clear()\n// //            this._destroyed = false\n//             return\n//         }\n\n        const getters = spyGetters(() => {\n            next = autoTerminalAware(this._computor)\n        })\n\n\n        this._computing = false\n        // getters.forEach(dep => {\n        //     if ((dep as any)._destroyed) {\n        //         console.warn('Destroyed dependency detected', dep)\n        //         this._destroyed = true\n        //     }\n        // })\n        // if (!this._destroyed) {\n            getters.forEach(dep => {\n                // автоподписка\n                dep.$subscribe(this)\n                this._sources.add(dep)\n            })    \n        // }\n\n\n        if (isValueSet(next)) {\n            next = next.$value\n        }\n\n        return next\n    }\n\n    // $touch(subscriber: Subscriber<T>): void {\n    //     let value = undefined\n    //     if (!this._touched) {\n    //         value = this.$compute()\n    //         this._touched = true\n    //     }\n    //     subscriber.$publish(value, undefined, EMPTY)       \n    // }\n\n    $publish(next: any, prev?: any, keys?: {[key: string]: any}): void {\n\n//        console.log('publish computable', next)\n\n        if (this._destroyed) {\n            console.warn('Publishing to destroyed computable')\n            return\n        }\n\n        let computed: any = undefined\n        try {\n            computed = this.$compute()\n        }\n        catch (err) {\n            console.error('Compute error', err)\n        }\n\n        if (computed && typeof (computed as ValueSet<any>).$at === 'function') {\n            computed = computed.$value\n        }\n\n        if (this.$isPrimitive && computed === this._memoValue) {\n//            console.log('No change detected', computed, this._memoValue)\n            return\n        }\n\n\n        const t = openTransaction()\n\n        super.$publish(computed, null, EMPTY)\n\n        let count = 0\n        transactionUpdates(t).forEach(upd => {\n            // FIXME\n            count += upd.node.$subscriptions.length\n        })\n\n        if (count == 0) {\n//            debugger\n            this._sources.forEach(dep => {\n                dep.$unsubscribe(this)\n            })\n            this._sources.clear()\n            this._initialized = false\n//            this._destroyed = true\n\n//            console.log('unsubscribed computable detected [publish]')\n        }\n\n\n        closeTransaction(t)\n        // this._updateEntries(computed)\n        // // у вычисляемых значений нет родителя/источника, поэтому обновляем поддерево только вниз\n        // this.$update(UpdateDirection.DESC, computed, null, EMPTY)    \n    }\n\n    $unsubscribe(subscription: Subscription|Subscriber<T>|PublishFunc<T>): void {\n        super.$unsubscribe(subscription)\n\n        // быстрая проверка на отписку\n        if (this._subscriptions.length == 0 && Object.keys(this._entries).length == 0) {\n            \n            this._sources.forEach(dep => {\n                dep.$unsubscribe(this)\n            })\n            this._sources.clear()\n            this._initialized = false\n//            this._destroyed = true\n\n//            console.log('unsubscribed computable detected [unsubscribe]')\n        }\n    }\n\n\n    $get () {\n//        console.log('compute')\n        return this._initialized ? this._memoValue : this.$compute()\n    }\n\n}\n\n\n\n\n\n//const _computeQue: ComputableNode<any>[] = []\n\nexport const computable = <T>(compute: Computor<T>, initValue?: T, entryUidFunc?: UidFunc) : ObservableValueSet<T>&T => {\n    let c = proxify(null, new ComputableNode<T>(compute, initValue, entryUidFunc))\n    // TODO переделать в compute engine?\n    // if (_computeQue.length == 0) {\n    //     setTimeout(() => {\n    //         while(_computeQue.length) {\n    //             _computeQue.shift().$publish(null)\n    //         }\n    //     })    \n    // }\n    // _computeQue.push(c)\n    return c\n}\n","import { SubscriptionProvider } from \".\"\nimport { EMPTY, LifecycleProvider } from \"./utils\"\n\n\nexport type Transaction = {\n    joined: boolean\n}\n\ntype NodeUpdate = {\n    node: SubscriptionProvider\n    prev: any\n    next: any\n}\n\ntype UpdateSession = {\n    nodes: Set<any>\n    head: any\n    deleted: (SubscriptionProvider&LifecycleProvider)[]\n    updated: NodeUpdate[]\n}\n\n\n\n\n\nlet _Session: UpdateSession = null\n\nexport const openTransaction = () : Transaction => {\n    const t = {joined: true}\n    if (!_Session) {\n        _Session = {\n            nodes: new Set(),\n            head: this,\n            deleted: [],\n            updated: []\n        }\n        t.joined = false\n    }\n    // else {\n    //     debugger\n    // }\n    return t\n}\n\nexport const closeTransaction = (t: Transaction) => {\n    if (!t.joined) {\n        if (_Session.updated.length > 0 || _Session.deleted.length > 0) {\n            _engine.addSession(_Session)\n        }\n        _Session = null    \n    }\n}\n\nexport const transactionUpdates = (t: Transaction) : NodeUpdate[] => {\n    return _Session.updated\n}\n\nexport const currentTransaction = () : UpdateSession => {\n    return _Session\n}\n\n\n\n\n\nclass UpdateEngine {\n\n    _sessions: UpdateSession[]\n    _commiting: boolean\n    _commitedNodes: Map<unknown, any>\n//    _commitedSubscriptions: Set<Subscription>\n\n    constructor () {\n        this._sessions = []\n        this._commitedNodes = new Map<any, unknown>()\n//        this._commitedSubscriptions = new Set<Subscription>()\n    }\n\n    addSession(session: UpdateSession) {\n        this._sessions.push(session)\n    }\n\n    commit () {\n        if (!this._commiting) {\n\n//            console.log('commit', this._sessions)\n\n//            this._commitedNodes.size == 0 && console.log('Commit start')\n            this._commiting = true\n\n            const sessions = this._sessions\n            this._sessions = []\n\n            sessions.forEach(session => {\n//                console.log('session', session.updated)\n\n                // ?\n                session.deleted.forEach(del => {\n//                    if (del.$subscriptions.length == 0) {\n                        del.$destroy()\n                    // }\n                    // console.log('del has subscriptions', del)\n                })\n\n//                const lastUpdateMap = new Map<Subscriber<any>, NodeUpdate>()\n                session.updated.forEach(upd => {\n                    if (this._commitedNodes.has(upd.node)) {\n                        //console.warn('Cyclic update detected', upd.prev, upd.next)\n                        if (upd.next === this._commitedNodes.get(upd.node)) {\n                            console.warn('Possible cyclic update', upd)\n                            return\n                        }\n//                        return\n                    }\n                    upd.node.$subscriptions.forEach(sub => {\n//                        console.log('publish to subscriber', upd.next)\n                        sub.subscriber.$publish(upd.next, upd.prev, EMPTY)\n                    })\n                    this._commitedNodes.set(upd.node, upd.next)\n                })\n                // lastUpdateMap.forEach((upd, sub) => {\n                //     sub.$publish(upd.next, upd.prev, EMPTY)\n                // })\n//                 session.updated.forEach(upd => {\n//                     if (this._commitedNodes.has(upd.node)) {\n//                         if (upd.next == 'filter: Albania') {\n//                             debugger\n//                         }\n// //                        console.log('Already commited', upd, upd.node._memoValue)\n//                         return\n//                     }\n//                     upd.node._subscriptions.forEach(sub => {\n//                         sub.subscriber.$publish(upd.next, upd.prev, EMPTY)\n//                     })\n//                 })\n//                this._commitedNodes.add(session.head as Node<any>)\n            })\n\n            this._commiting = false\n\n            if (this._sessions.length > 0) {\n                this.commit()\n//                console.log('commit')\n            }\n            else {\n                this._commitedNodes.clear()\n//                console.log('Commit end')\n            }\n        }\n    }\n\n\n}\n\nconst _engine = new UpdateEngine()\n\n\nexport const commitEngine = () => {\n    return _engine\n}","export * from './utils'\nexport * from './node'\nexport * from './observable'\nexport * from './computable'\nexport * from './iterator'\nexport * from './iterable'\nexport * from './callable'\nexport * from './pubsub'\n","import { ObservableValueSet, UidFunc, Node, ValueSet, ObservableValue } from \"./node\";\nimport { isObservable, observable, ObservableNode } from \"./observable\";\nimport { Observable, PublishFunc, Subscriber, Subscription } from \"./utils\";\n\n\n\n\nexport interface IterableValue<T, K extends keyof T=keyof T> {\n    readonly $name: string\n    $each (f: (itm: ValueSet<T[K]>, i?: string) => void) : void\n}\n\n\n\n\nexport class IterableNode<T, K extends keyof T=keyof T> extends Node<T> implements IterableValue<T> {\n\n    _origin: ObservableValueSet<T>\n    _name: string\n\n    constructor (initValue: T, origin?: ObservableValueSet<T>, key?: string) {\n        super()\n\n        this._origin = origin\n        this._name = key\n        this._memoValue = {} // FIXME обманываем isTerminal\n\n        if (!origin) {\n            this._origin = observable(initValue)\n        }\n\n        // FIXME это не должно быть в конструкторе\n        this._origin.$subscribe(this)\n    }\n\n    get $name () {\n        return this._name\n    }\n\n    // $publish(next: any, prev?: any, keys?: {[key: string]: any}): void {\n\n\n    // }\n\n    $each (f: (itm: ValueSet<T[K]>, i?: string) => void) {\n//        console.log('each')\n        const origin = (this._origin as ValueSet<T>) //|| this//(this as ValueSet<T>)\n        const v = origin.$value\n        // console.log('each', v)\n        // console.log('each', (origin as any)._entries)\n        for (let i in v) {\n            f(origin.$at(i) as any, i) // FIXME\n        }\n//        console.log('each end')\n\n        // if (Array.isArray(v)) {\n        //     for (let i = 0; i < v.length; i++) {\n        //         f(origin.$at(i))\n        //     }\n        // }\n        // else {\n        //     for (let i in v) {\n        //         f(origin.$at(i as K))\n        //     }    \n        // }\n        // origin.$ownKeys().forEach(i => {\n        //     f(origin.$at(i as K))\n        // })\n    }\n\n    $unsubscribe(subscription: Subscription|Subscriber<T>|PublishFunc<T>): void {\n        super.$unsubscribe(subscription)\n\n        if (this._subscriptions.length == 0) {\n            this._origin.$unsubscribe(this)\n            this._origin = null\n            this._initialized = false\n\n            console.log('unsubscribed iterable detected [unsubscribe]')\n        }\n    }\n\n\n\n}\n\n\n\nexport const iterable = <T>(source: ObservableValueSet<T>|T, key: string = '__it') : IterableValue<T>&T => {\n    return (isObservable(source) ? new IterableNode(null, source, key) : new IterableNode(source, null, key)) as any\n}\n\n\nexport const isIterable = (v: any) : v is IterableValue<any> => {\n    return v != null && typeof (v as IterableValue<any>).$each === 'function'\n}\n","import { Indexed, Keyed } from \"../Hub\";\nimport { ObservableValueSet, UidFunc, ValueKey, ValueSet } from \"./node\";\nimport { observable } from \"./observable\";\nimport { NextValue, Value, ValueIterator } from \"./utils\";\n\n\n\nexport class ObservableValueIterator<T> implements ValueIterator<T> {\n\n    source: ValueSet<any>\n    keys: ValueKey[]\n    index: number\n    maxIndex: number\n    key: string\n \n    constructor (source: ValueSet<T>, key: string) {\n        this.source = source\n        this.index = -1\n        this.key = key\n    }\n\n    next <K>() : NextValue<K> {\n\n        if (this.source == null) {\n            return {done: true}\n        }\n\n        if (this.index == -1) {\n            let v = this.source.$value\n            if (Array.isArray(v)) {\n                this.maxIndex = v.length\n            }\n            else if (typeof v === 'object') {\n                this.keys = Object.keys(v)\n            }\n            else {\n                console.error('Value is not iterable', v)\n            }\n        }\n\n        this.index++\n\n        const result : NextValue<K> = {\n            done: false\n        }\n\n        if (this.keys) {\n            if (this.index < this.keys.length) {\n                result.value = this.source.$at(this.keys[this.index])\n            }\n            else {\n                result.done = true\n            }\n        }\n        else {\n            if (this.index < this.maxIndex) {\n                result.value = this.source.$at(this.index)\n            }\n            else {\n                result.done = true\n            }\n        }\n\n        return result\n    }\n\n    get $name () {\n        return this.key\n    }\n}\n\n\n// export const iterator = <T extends []|{}>(source: T, name: string = '__it') : ValueIterator<T> => {\n//     return new ObservableValueIterator(source as any, String(name))\n// }\n\n// export const next = <T>(scope: any, name: string = '__it') : Value<T> => {\n//     return scope[name]\n// }\n\n","import { Observable, Value, Subscriber, EventBus, Subscription, PublishFunc, defaultUidFunc, EMPTY} from './utils'\nimport { closeTransaction, commitEngine, currentTransaction, openTransaction } from './engine'\nimport { LifecycleProvider, SubscriptionProvider } from './utils'\nimport { PubSub } from './pubsub'\n\nexport type UidFunc<I=any> = (value: I) => string\n\nexport type ObservableValue<T> = Observable<T>&Value<T>\n\nexport type ValueKey = string | number | symbol\n\nexport enum UpdateDirection {\n    ASC,\n    DESC,\n    BOTH\n}\n\nexport enum HasCheck {\n    PROPERTY,\n    METHOD\n}\n\nexport enum IsCheck {\n    ARRAY,\n}\n\nexport interface ValueSet<T, K extends keyof T=keyof T> extends Value<T> {\n    $at <K extends keyof T=keyof T>(key: K, factory?: Function): ValueSet<T[K]>\n    $has (key: ValueKey, check?: HasCheck) : boolean\n    $ownKeys () : (string|symbol)[]\n    $getOwnPropertyDescriptor (key: ValueKey) : object\n//    $each <I=T[K]>(f: (itm: ValueSet<I>) => void) : void\n    $is (check: IsCheck) : boolean\n}\n\nexport interface ObservableValueSet<T> extends ObservableValue<T> {\n    $at <K extends keyof T=keyof T>(key: K, factory?: Function): ObservableValueSet<T[K]>\n    $has (key: ValueKey, check?: HasCheck) : boolean\n    $ownKeys () : (string|symbol)[]\n    $getOwnPropertyDescriptor (key: ValueKey) : object\n//    $each <K extends keyof T=keyof T>(f: (itm: ObservableValueSet<T[K]>) => void) : void\n    $is (check: IsCheck) : boolean\n}\n\n\ninterface ValueNode<T> extends Value<T> {\n    readonly $key: ValueKey\n    readonly $source: ValueNode<any>\n    $update (direction: UpdateDirection, nextValue: any, key?: ValueKey, keyInfo?: {[key: string]: any}): void\n    $hasFunction (key: ValueKey) : boolean\n    $destroy () : void\n    $get () : T\n}\n\n\n\n\n\n\n// Spies\n\nlet _SpyGetters : Observable<any>[] = null\n\n// let _SpySubscriptions : Subscription[] = null\n\n// export const spySubscriptions = (fn: Function) : Subscription[] => {\n//     const prevSub = _SpySubscriptions\n//     _SpySubscriptions = []\n//     fn()\n//     const result = _SpySubscriptions\n//     _SpySubscriptions = prevSub\n//     return result\n// }\n\nexport const spyGetters = (fn: Function) : Observable<any>[] => {\n    const prevGetters = _SpyGetters\n    _SpyGetters = []\n    fn()\n    const result = _SpyGetters\n    _SpyGetters = prevGetters\n    return result\n}\n\n\n// const transactionAware = (fn: Function) => {\n//     if (_Session) {\n//         debugger\n//     }\n//     _Session = {\n//         nodes: new Set(),\n//         head: this,\n//         deleted: [],\n//         updated: []\n//     }\n//     fn()\n\n//     if (_Session.updated.length > 0 || _Session.deleted.length > 0) {\n//         _update_engine.addSession(_Session)\n//     }\n\n//     _Session = null\n// }\n\n\n\n\n\nexport abstract class Node<T, E=any> extends PubSub<T, E> implements ValueNode<T>, LifecycleProvider {\n\n    _memoValue: any\n    _source: Node<unknown>\n    _key: ValueKey\n    _subscriptions: Subscription[]\n    _entries: {[key: string]: Node<unknown>}\n    _uidFunc: UidFunc\n    _uid: string\n//    _session: UpdateSession\n    _initialized: boolean\n    _destroyed: boolean\n\n    constructor (initValue?: T, source?: Node<unknown>, key?: ValueKey, entryUidFunc?: UidFunc) {\n        super()\n        this._memoValue = initValue\n        this._source = source\n        this._key = key\n        this._subscriptions = []\n        this._entries = {}\n        this._uidFunc = entryUidFunc || defaultUidFunc\n//        this._session = undefined\n        this._uid = undefined\n        this._initialized = source == null\n        this._destroyed = false\n    }\n\n    get $key () {\n        return this._key\n    }\n\n    get $source () {\n        return this._source\n    }\n\n    toString () {\n        return String(this.$value)\n    }\n\n    toJSON () {\n        console.log('to json')\n        return this.$value\n    }\n\n    valueOf () {\n        return this.$value\n    }\n\n    get [Symbol.toStringTag] () {\n        const v = Object.prototype.toString.call(this.$value)\n        return v.substring(8, v.length-1)\n    }\n\n    [Symbol.toPrimitive] () {\n        const v = this.$value\n        if (typeof v === 'object') {\n            return String(v)\n        }\n        return v// this.$value//[Symbol.toPrimitive]\n    }\n\n    get [Symbol.isConcatSpreadable] () {\n        return Array.isArray(this.$value) //this._memoValue && this._memoValue[Symbol.isConcatSpreadable]\n    }\n\n    get $uid () {\n        if (_SpyGetters) {\n            _SpyGetters.push(this)\n        }\n        return this._uid\n    }\n\n    get $isTerminal () {\n        const v = this.$value\n        return (v == null || (typeof v == 'string') || (typeof v == 'number') || (typeof v == 'symbol') || (typeof v == 'boolean') || (typeof v == 'function'))// || Array.isArray(v))\n    }\n\n    get $isPrimitive () {\n        const v = this.$value\n        return (v == null || (typeof v == 'string') || (typeof v == 'number') || (typeof v == 'symbol') || (typeof v == 'boolean') || (typeof v == 'function'))\n    }\n\n    get $value () {\n\n        if (_SpyGetters) {\n            _SpyGetters.push(this)\n        }\n        if (this._destroyed) {\n            console.error('Value in destroyed state', this)\n            return undefined\n//            debugger\n        }\n        if (!this._initialized) {\n            this._memoValue = this.$get()\n            // if (this._memoValue && typeof this._memoValue.$at === 'function') {\n            //     this._memoValue = this._memoValue.$value\n            // }\n            this._initialized = true\n        }\n\n        if (this._memoValue && typeof (this._memoValue as ValueSet<any>).$at === 'function') {\n            debugger\n        }\n\n        return this._memoValue\n    }\n\n    set $value (newValue: any) {\n\n        if (this._destroyed) {\n            console.error('Value drop destroyed state', this)\n            this._destroyed = false\n        }\n\n        // если новое значение является наблюдаемым, то берем только его значение\n        // сейчас эта проверка дублирует аналогичную в publish\n        if (newValue && typeof (newValue as ValueSet<any>).$at === 'function') {\n            newValue = newValue.$value\n        }\n\n        if (this.$isPrimitive && newValue === this._memoValue) {\n//            console.log('No change detected', newValue, this._memoValue)\n            return\n        }\n\n//        transactionAware(() => {\n        this.$publish(newValue, this._memoValue, EMPTY)\n//        })\n\n        // // обновляем дерево значений\n        // if (_Session) {\n        //     debugger\n        // }\n        // _Session = {\n        //     nodes: new Set(),\n        //     head: this,\n        //     deleted: [],\n        //     updated: []\n        // }\n        // // const prevSession = _Session\n        // // _Session = null\n        //  // _Session = prevSession\n\n        // _update_engine.addSession(_Session)\n\n        // _Session = null\n        \n        commitEngine().commit()\n        // if (newValue != null) {\n\n        //     if ((newValue as ValueNode<any>).$at) {\n        //         newValue = (newValue as Value<any>).$value\n        //     }\n\n        //     this._updateEntries(newValue)\n        // }\n\n        // this.$update(UpdateDirection.BOTH, newValue, null, EMPTY)\n    }\n\n    $hasFunction (key: ValueKey) : boolean {\n        const v = this.$value\n        return v != null && typeof v[key] == 'function'\n    }\n\n\n\n\n    // -----------------\n    // Pub/Sub\n    // -----------------\n\n    $publish(next: any, prev?: any, keys?: {[key: string]: any}): void {\n\n //       console.log('publish')\n\n        if (!this._initialized) {\n            console.warn('Value is not initialized', this)\n            this._initialized = true // FIXME насколько это корректно?\n        }\n\n        // if (this._destroyed) {\n        //     console.warn('Value destroyed', this)\n        //     return\n        // }\n\n\n        const t = openTransaction()\n\n//         let session = null\n//         if (!_Session) {\n//             _Session = {\n//                 nodes: new Set(),\n//                 head: this,\n//                 deleted: [],\n//                 updated: []\n//             }\n//             session = _Session\n// //            console.log('Session start', this)\n//         }\n//         else {\n//             if (this._source == null) {\n// //                console.log('Root node detected', next, this)\n//             }    \n//         }\n\n//         if (_Session.nodes.has(this)) {\n// //            console.log('Already in session', this)\n//             return\n//         }\n\n\n\n        if (next != null) {\n\n            if (typeof (next as ValueNode<any>).$update === 'function') {\n                next = (next as Value<any>).$value\n            }\n\n//            this._updateEntries(next)\n        }\n\n        this.$update(UpdateDirection.BOTH, next, null, EMPTY)\n\n        closeTransaction(t)\n\n//         if (session) {\n//             _Session = null\n//             _update_engine.addSession(session)\n//             // session.deferred.forEach(node => {\n//             //     node._subscriptions.forEach(sub => sub.subscriber.$publish(node._memoValue, prev, EMPTY))\n//             // })\n// //            console.log(_Session.deleted)\n// //            session.deleted.forEach(node => node.$destroy())\n// //            console.log('Session end', this)\n//         }\n    }\n\n\n    $touch(subscriber: Subscriber<T>): void {\n        //this._started = true\n        subscriber.$publish(this.$value, undefined, EMPTY)\n    }\n\n    $untouch () {\n        // TODO проверки при отсоединении\n    }\n\n\n    // ----------------\n    // Node\n    // ----------------\n\n    // abstract $at <I=T[K]>(key: K, factory?: Function): ValueSet<I>\n\n\n    $update (direction: UpdateDirection, value: any, key?: ValueKey, keyInfo?: {[key: string]: any}) {\n\n        if (this._destroyed) {\n            console.error('Value destroyed and should not be updated', this)\n            return\n        }\n\n        // if (this._key == 'filter') {\n        //     console.log('update filter', value)\n        // }\n\n//        console.log('update', this._key, this._memoValue, this._entries)\n\n        // else {\n        //     if (_Session.nodes.has(this)) {\n        //         return\n        //     }\n        // }\n//        _Session.nodes.add(this)\n\n\n//        this._session = _Session\n\n        const prev = this._memoValue\n\n        if (direction == UpdateDirection.ASC) {\n            this._memoValue[key] = value\n        }\n        else {\n            this._memoValue = value\n        }\n\n        // уведомление дочерних элементов\n        if (direction == UpdateDirection.DESC || direction == UpdateDirection.BOTH) {\n\n            this._updateEntries(value)\n\n            for (let i in this._entries) {\n                this._entries[i].$update(UpdateDirection.DESC, this._memoValue == null ? undefined : this._memoValue[i])\n            }\n        }\n\n\n        // уведомление родительского элемента\n        if (direction == UpdateDirection.ASC || direction == UpdateDirection.BOTH) {\n            if (this._source) {\n                this._source.$update(UpdateDirection.ASC, this._memoValue, this._key, {[this._key]: keyInfo})\n            }\n        }\n\n        const t = currentTransaction()\n        if (t) {\n            t.updated.push({\n                node: this,\n                next: this._memoValue,\n                prev\n            })\n        }\n\n//        console.log('notify', this._key, this._memoValue)\n\n    }\n\n\n    // ----------------\n    // internal\n    // ----------------\n\n    _updateEntries (newValue: any) {\n\n        const nextEntries: {[key: string]: any} = {}\n        const reuseMap: {[key: string]: Node<any>} = {}\n    \n        if (Array.isArray(newValue)) {\n\n            for (let k in this._entries) {\n                let uid = this._entries[k].$uid\n                if (uid == undefined) {\n                    uid = this._uidFunc(this._entries[k].$value)\n                    if (uid === undefined) {\n                        uid = String(k)\n                    }\n                }\n                reuseMap[uid] = this._entries[k]\n            }\n\n//            Object.assign(reuseMap, this._entries)\n\n//            const uidFunc = this._uidFunc || defaultUidFunc\n\n            // prevMap составляем только на основе индексированных значений, чтобы значения свойтв (length)\n            // не перекрывали ключи\n            // newValue.forEach((v, k) => {\n            //     if (k in this._entries) {\n            //         let uid = this._entries[k].$uid// (this._entries[k] as Axle<any>)._uid// uidFunc(this._entries[k].$value) //(this._entries[k] as Value<any>).$uid\n            //         if (uid === undefined) {\n            //             uid = this._uidFunc(this._entries[k].$value)\n            //             if (uid === undefined) {\n            //                 uid = String(k)\n            //             }\n            //         }\n            //         reuseMap[uid] = this._entries[k]\n            //     }\n            // })\n\n            // for (let k in this._entries) {\n            //     let uid = this._entries[k].$uid// (this._entries[k] as Axle<any>)._uid// uidFunc(this._entries[k].$value) //(this._entries[k] as Value<any>).$uid\n            //     if (uid === undefined) {\n            //         uid = this._uidFunc(this._entries[k].$value)\n            //         if (uid === undefined) {\n            //             uid = k\n            //         }\n            //     }\n            //     prevMap[uid] = this._entries[k]\n            // }\n\n//            console.log(this._key, Object.keys(reuseMap))\n    \n    //            const nextMap: {[key: string]: any} = {}\n            newValue.forEach((v, i) => {\n                let uid = this._uidFunc(v)\n                if (uid === undefined) {\n                    uid = String(i)\n                }\n                let entry = reuseMap[uid] as Node<any>\n                if (entry) {\n//                    console.log('reuse entry', [entry._key, entry._uid], [i, uid])\n                    nextEntries[i] = entry;\n                    entry._key = String(i);\n                    entry._uid = uid;\n                    entry._memoValue = v;\n                    delete reuseMap[uid]\n                }\n                else {\n                }\n//                nextMap[uid] = v\n            })\n\n//            console.log('rest reuse map', this._key, reuseMap)\n\n//            console.log(this._key, nextEntries)\n\n        }\n        else if (newValue && newValue.constructor === Object) {\n            Object.assign(reuseMap, this._entries)\n            for (let k in newValue) {\n                // const v = newValue[k]\n                // const uid = k//uidFunc(v)\n                let entry = this._entries[k] as Node<any>// prevMap[uid]\n                if (entry) {\n                    nextEntries[k] = entry;\n                    entry._key = k;\n                    entry._uid = k\n                    delete reuseMap[k]\n\n                    // ?\n                    if (entry._destroyed) {\n                        console.log('Entry restored', entry)\n                        entry._subscriptions.length > 0 && console.error('Restored entry has subscriptions', entry)\n                        entry._destroyed = false\n                    }\n                }\n                else {\n\n                }\n            }\n        }\n        // else {\n        //     Object.assign(prevMap, this._entries)\n        // }\n\n        this._entries = nextEntries\n\n        for (let i in reuseMap) {\n\n            const removed = reuseMap[i]\n\n            // замененные элементы\n            if (i in nextEntries) {\n                console.log('replaced', reuseMap[i])\n            }\n            else {\n                if (i != removed._key) {\n                    console.warn('removed and changed key', i, removed._key, removed.$uid)//, removed)\n                    //console.log(prevMap)\n                }\n\n                if (removed._subscriptions.length > 0) {\n                    if (this._entries[String(removed._key)]) {\n                        debugger\n                    }\n                    else {\n                        this._entries[String(removed._key)] = removed\n                    }\n//                    removed._destroyed = true\n                    continue\n                }\n\n                console.log('removed', removed._key, removed._memoValue)\n            }\n\n            const t = currentTransaction()\n            if (t) {\n                t.deleted.push(reuseMap[i])\n            }\n\n\n//            if (!(i in nextEntries)) {\n                // этот элемент идет на удаление\n//                console.log('delete', i)\n//                if (!_Sess)\n            \n//                prevMap[i]._destroy()\n//            }\n        }\n    }\n\n    // _createEntry (value: T, key: ValueKey) : Node<T> {\n    //     return null// new Node(value, this, key)\n    // }\n\n    $get () {\n        if (this._initialized) {\n            return this._memoValue\n        }\n        const v = this._source.$get() as any\n        return v == null ? v : v[this._key]\n//        return this._initialized ? this._memoValue : (this._source.$get() as any)[this._key]\n    }\n\n    $destroy () {\n\n        console.log('destroy', this._key, this._memoValue ,this._subscriptions.length)\n\n        this._destroyed = true\n\n        for (let i in this._entries) {\n//            console.log('destroy', i)\n            this._entries[i].$destroy()\n        }\n        this._memoValue = undefined\n\n        // ?\n        // this._subscriptions.forEach(sub => {\n        //     sub.subscriber.$publish(undefined, this._memoValue, EMPTY)\n        // })\n\n        // this._subscriptions = []\n        // this._entries = null\n        // this._source = null\n\n//        console.log('deleted', this._key)\n        // FIXME здесь нужно каскадное обновление\n//        this.$update(UpdateDirection.DESC, undefined, this._memoValue, EMPTY)\n//        this._subscriptions.forEach(sub => sub.subscriber.$publish(undefined, this._memoValue, EMPTY))\n    }\n\n    // get _inTransaction () : boolean {\n    //     return _update_engine._commited.has(this)\n    // }\n\n    // get $subscriptions () {\n    //     return this._subscriptions\n    // }\n}\n\n\n","import { ObservableValueIterator } from './iterator'\nimport { Node, UidFunc, ValueSet, ValueKey, ObservableValueSet, HasCheck, IsCheck, ObservableValue} from './node'\nimport { EventBus, Observable, ValueIterator } from './utils'\n\n\nlet _AutoTerminal = false\n\nexport const autoTerminalAware = (fn: Function) : any => {\n    const prevAutoTermial = _AutoTerminal\n    _AutoTerminal = true\n    try {\n        const result = fn()\n        return result    \n    }\n    finally {\n        _AutoTerminal = prevAutoTermial\n    }\n}\n\nexport const noAutoTerminal = (fn: Function) : any => {\n    const prevAutoTermial = _AutoTerminal\n    _AutoTerminal = false\n    try {\n        const result = fn()\n        return result\n    }\n    finally {\n        _AutoTerminal = prevAutoTermial\n    }\n}\n\nexport const isAutoTerminal = () => _AutoTerminal\n\n\n\n\nexport class ObservableNode<T, K extends keyof T=keyof T> extends Node<T> implements ValueSet<T> {\n\n\n    $at <I=T[K]>(k: ValueKey, creator?: Function): ValueSet<I> {\n        let entry = this._entries[String(k)]\n        if (!entry) {\n            let value = this._memoValue ? this._memoValue[k] : null\n            // if (value && typeof value.$at === 'function') {\n            //     value = value.$value\n            // }\n            entry = creator ? creator(this, k) : this._createEntry(value, k);\n            // FIXME\n            (entry as Node<any>)._uid = this._uidFunc(value)\n//            entry = proxify(entry.$value, entry)\n            this._entries[String(k)] = entry\n        }\n        return entry as any // FIXME\n    }\n\n    $has (key: ValueKey, check?: HasCheck) : boolean {\n        const v = this.$value\n        if (v != null && v[key] != null) {\n            if (check == HasCheck.METHOD) {\n                return typeof v[key] === 'function'\n            }\n            return true\n        }\n        return false\n    }\n\n    $is (check: IsCheck) : boolean {\n        if (check == IsCheck.ARRAY && Array.isArray(this._memoValue)) {\n            return true\n        }\n        return false\n    }\n\n    $ownKeys () : (string|symbol)[] {\n        const v = this.$value\n        return typeof v == 'object' ? Reflect.ownKeys(v) : []\n    }\n\n    $getOwnPropertyDescriptor (name: ValueKey) : object {\n        const v = this.$value\n        return (typeof v == 'object') ? Reflect.getOwnPropertyDescriptor(v, name) : undefined\n    }\n\n\n    _createEntry (value: T, key: ValueKey) : Node<T> {\n        return proxify(value, new ObservableNode(value, this, key))\n    }\n\n}\n\n\n\n\n\n\nexport const observable = <T>(initValue: ObservableValueSet<T>|T, uidFunc?: UidFunc) : ObservableValueSet<T>&T => {\n    const value = isValueSet(initValue) ? initValue.$value : initValue\n    return proxify(value, new ObservableNode(value, null, null, uidFunc))\n}\n\n\nexport const reactive = <T>(initValue?: T, uidFunc?: UidFunc) : T => {\n    const value = isValueSet(initValue) ? initValue.$value : initValue\n    return proxify(value, new ObservableNode(value, null, null, uidFunc))\n}\n\n\n// export const iterable = <T>(initValue: ObservableValueSet<T>|T, uidFunc: UidFunc) : ObservableValueSet<T>&T => {\n//     return observable(initValue, uidFunc)\n// }\n\n\n\nexport const isObservable = (v: any) : v is ObservableValueSet<any> => {\n    return v != null && typeof (v as Observable<any>).$subscribe === 'function'\n    // if (v != null) {\n    //     if (v[__isProxy]) {\n    //         return '$subscribe' in v\n    //     }\n    //     else {\n    //         return v.$subscribe != null\n    //     }\n    // }\n    // return false\n//    return v != null && (v as Observable<any>).$subscribe != undefined\n}\n\nexport const isValueSet = <T=any>(v: T|ObservableValueSet<T>) : v is ObservableValueSet<T> => {\n    return v != null && typeof (v as ValueSet<any>).$at === 'function'\n    // if (v != null) {\n    //     if (v[__isProxy]) {\n    //         return '$at' in v\n    //     }\n    //     else {\n    //         return v.$at != null\n    //     }\n    // }\n    return false\n}\n\nexport const isValueIterator = (v : any) : v is ValueIterator<any> => {\n    if (v != null) {\n        if (v[__isProxy]) {\n            return 'next' in v\n        }\n        else {\n            return v.next != null\n        }\n    }\n    return false\n}\n\n\n\n// const ownProps: Set<string|number|symbol> = new Set(['$key', '$value', '$uid', '$source'])\n\n// console.log(Object.getOwnPropertyNames(new ProxyObservableNode()))\n\n\nexport const __isProxy = Symbol('__isProxy')\nexport const __isValue = Symbol('__isValue')\n\nexport interface Proxied {\n    [__isProxy]: boolean\n}\n\n\nexport const proxify = <T>(obj: T, node: ValueSet<T>) : ValueSet<T>&T => {\n    const proxy: any = new Proxy(node, {\n        get (target, name) {\n\n            // if (name == __isProxy) {\n            //     return true\n            // }\n\n            if (name == '_raw') {\n                debugger\n            }\n\n//            console.log(name, name in target)\n\n            // собственные свойства\n            if (name in target) {\n                const v = (target as any)[name]\n                if (v && typeof v === 'function') {\n                    return v.bind(target)\n                }\n                return v\n            }\n\n//             if (target.$is(IsCheck.ARRAY)) {\n// //                console.log('array', target.$value, name)\n//                 return (target.$value as any)[name]\n//             }\n\n            if (target.$is(IsCheck.ARRAY)) {\n                if (name == 'splice') {\n                    const v = target.$value as any\n                    return (...args: any) => {\n//                        debugger\n                        const out = v[name].apply(v, args)\n                        target.$value = v\n                        return out\n                    }\n                }\n            }\n\n\n            if (target.$has(name, HasCheck.METHOD)) {\n                const v = target.$value as any\n                return v[name].bind(v)//proxy)\n            }\n\n\n\n            // if (!target.$has(name)) {\n            //     return undefined\n            // }\n\n            const entry = (target as ValueSet<any>).$at(name)\n\n            if (_AutoTerminal && entry.$isTerminal) {\n//                console.log('terminal', name, target)\n                return entry.$value\n            }\n\n//            console.log('ENTRY')\n\n            return entry\n        },\n        set: (target, name, v) : boolean => {\n            if (name in target) {\n                (target as any)[name] = v\n            }\n            else {\n                (target as ValueSet<any>).$at(name).$value = v\n            }\n            return true\n        },\n        ownKeys: (target) : ArrayLike<string|symbol> => {\n//            console.log('KEYS')\n//            const v = target.$value\n            // if (v == null) {\n            //     return []\n            // }\n            return target.$ownKeys()//.concat(Object.keys(target))\n        },\n        has: (target, name) : boolean => {\n//            const v = target.$value\n//            console.log('HAS', v, name)\n            // if (v == null) {\n            //     return false\n            // }\n            // if (typeof v === 'number') {\n            //     return name in Number.prototype\n            // }\n            // if (typeof v === 'boolean') {\n            //     return name in Boolean.prototype\n            // }\n            return Reflect.has(target, name) || target.$has(name)// Reflect.has(v as any, name)\n            //return target.$value != null && (name in target.$value)\n            //return true\n        },\n        getOwnPropertyDescriptor: (target, name) => {\n//            console.log(name, target)\n            // if (target.$value == null) {\n            //     return {}\n            // }\n            const pd: PropertyDescriptor = Reflect.getOwnPropertyDescriptor(target, name) || target.$getOwnPropertyDescriptor(name)// Reflect.getOwnPropertyDescriptor(target.$value as any, name)\n            pd.configurable = true\n            return pd\n        },\n        apply: (target, thisArg, args) => {\n            return (target as any).$call(thisArg, args)\n            // const f = (target.$value as any)\n            // f.$emit('before', args)\n\n            // return (target.$value as any).apply(thisArg, args)\n        }\n        // getPrototypeOf: (target) : object => {\n        //     console.log('get prototype of')\n        //     return Reflect.getPrototypeOf(target.$value as any)\n        //     // console.log('prototype of')\n        //     // if (typeof target.$value === 'number') {\n        //     //     return Number.prototype\n        //     // }\n        //     // return Object.getPrototypeOf(target.$value)\n        // }\n    })\n    return proxy as ValueSet<T>&T\n}\n\n    \n","import { Observable, PublishFunc, Subscriber, Subscription, SubscriptionProvider } from \"./utils\";\nimport { EventNode } from \"./bus\";\n\n\n\n\n// Spies\n\nlet _SpySubscriptions : Subscription[] = null\n\nexport const spySubscriptions = (fn: Function) : Subscription[] => {\n    const prevSub = _SpySubscriptions\n    _SpySubscriptions = []\n    fn()\n    const result = _SpySubscriptions\n    _SpySubscriptions = prevSub\n    return result\n}\n\n\nexport abstract class PubSub<T, E> extends EventNode<E> implements Observable<T>, SubscriptionProvider {\n\n    _subscriptions: Subscription[]\n\n\n    constructor (global?: {[key: string]: any}) {\n        super(global)\n\n        this._subscriptions = []\n    }\n\n    $touch(subscriber: Subscriber<T>): void {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    $untouch(): void {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    $publish (next: any, prev?: any, keys?: {[key: string]: any}): void {\n        throw new Error(\"Method not implemented.\");\n    }\n\n\n    $subscribe(subscriber: Subscriber<T>|PublishFunc<T>): Subscription {\n\n        // if (this._destroyed) {\n        //     console.error('Cannot subscribe to deleted value')\n        //     return null\n        // }\n        \n        // проверяем, что такая подписка уже есть\n        for (let sub of this._subscriptions) {\n            if (sub.subscriber == subscriber || sub.subscriber.$publish == subscriber) {\n                return sub\n            }\n        }    \n\n        if (typeof subscriber === 'function') {\n            subscriber = {\n                $publish: subscriber\n            }\n        }\n\n        const sub: Subscription = {\n            subscriber,\n            observable: this\n        }\n\n        this._subscriptions.push(sub)\n\n        if (_SpySubscriptions) {\n            _SpySubscriptions.push(sub)\n        }\n\n        return sub\n    }\n\n    $unsubscribe(subscription: Subscription|Subscriber<T>|PublishFunc<T>): void {\n        // if (this._destroyed) {\n        //     console.error('Cannot unsubscribe from deleted value')\n        //     return \n        // }\n        this._subscriptions = this._subscriptions.filter(sub => sub != subscription && sub.subscriber != subscription && sub.subscriber.$publish != subscription)\n    }\n\n    // $touch(subscriber: Subscriber<T>): void {\n    //     //this._started = true\n    //     subscriber.$publish(this.$value, undefined, EMPTY)\n    // }\n\n    // $untouch () {\n    //     // TODO проверки при отсоединении\n    // }\n\n    get $subscriptions () {\n        return this._subscriptions\n    }\n\n\n}","\n\nexport const EMPTY = Object.seal({})\n\n\nexport interface Value<T> {\n    $value: T\n    readonly $uid: string\n    readonly $isTerminal: boolean\n}\n\n//export type MutableValue<T> = Observable<T>&Value<T>\n\n// Pub/Sub\n\nexport type PublishFunc<T> = (next: T, prev?: T, keys?: {[key: string]: any}) => void\n\nexport interface Subscriber<T> {\n    $publish: PublishFunc<T>\n}\n\nexport type Subscription = {\n    subscriber: Subscriber<any>\n    observable: Observable<any>\n}\n\nexport interface Observable<T> extends Subscriber<T> {\n    $subscribe (subscriber: Subscriber<T>|PublishFunc<T>) : Subscription\n    $unsubscribe (subscription: Subscription|Subscriber<T>|PublishFunc<T>) : void\n    $touch (subscriber: Subscriber<T>) : void\n    $untouch () : void\n}\n\nexport interface SubscriptionProvider {\n    readonly $subscriptions: Subscription[]\n}\n\nexport interface LifecycleProvider {\n    $destroy () : void\n}\n\n\n// EventBus\n\ninterface EventRegistry<E> {\n    $event (name: string) : Function\n    $hasEvent (name: string) : boolean\n} \n\nexport interface EventBus<E> extends EventRegistry<E> {\n    $emit(name: string, ...args: any[]) : void\n    $on (name: string, callback: Function, target?: unknown) : Handler<E>\n    $off (callbackOrTargetOrListener: Function|unknown) : void\n}\n\nexport type Handler<E> = {\n    name: string\n    callback: Function\n    bus: EventBus<E>\n    target?: unknown\n}\n\n\n\n\nexport interface Thenable {\n    then: Function\n}\n\n\n\n\n// Stream\n\n// type KeyValuePair<T> = {\n//     key: ValueKey\n//     value: Value<T>\n// }\n\nexport type NextValue<T> = {\n    done: boolean\n    value?: Value<T>\n}\n\nexport interface ValueIterator<T, K = T extends any[] ? T[number] : T[keyof T]> {\n    next() : NextValue<K>\n    readonly $name: string\n}\n\n\n\n\n\n// let _SubscriptionSpy = []\n\n// export const spySubscriptions = (fn: Function) : Subscription[] => {\n//     // TODO\n//     return []\n// }\n\n\n// let _AutoSubscriber : Subscriber<any> = null\n\n// export const checkAutoSubscriber = () : Subscriber<any> => {\n//     return _AutoSubscriber\n// }\n\n\n\nexport const defaultUidFunc = (v: any) : string => {\n    if (v == null) {\n        return undefined\n    }\n    let uid = undefined\n    if (typeof v == 'string' || typeof v == 'number' || typeof v == 'boolean' || typeof v == 'symbol') {\n        uid = String(v)\n    }\n    else if (v.id != null) {\n        uid = String(v.id)\n    }\n    else {\n//        console.warn('Uid function should be defined', v)\n    }\n    if (uid == '[object Object]') {\n        console.warn('Uid should be a primitive value', uid, v)\n    }\n    return uid\n}\n\n\n\nexport const isEventBus = (v: any) : v is EventBus<any> => {\n    return v != null && (v as EventBus<any>).$hasEvent != undefined\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/index.ts\");\n"],"sourceRoot":""}